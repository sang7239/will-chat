{"ast":null,"code":"import React, { useState, useEffect, useContext, useRef } from 'react';\nimport ConversationSearch from '../ConversationSearch';\nimport ConversationListItem from '../ConversationListItem';\nimport MessageList from '../MessageList';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport axios from 'axios';\nimport AuthContext from \"../../context/AuthContext\";\nimport './ConversationList.css';\nimport Axios from 'axios'; // export default function ConversationList(props) {\n//   const [conversations, setConversations] = useState([]);\n//   const authentication = useContext(AuthContext);\n//   const [name, setChannelName] = useState(\"\");\n//   const [description, setDescription] = useState(\"\")\n//   const [channelType, setChannelType] = useState(\"public\")\n//   useEffect(() => {\n//     getChannels()\n//   },[])\n//  const getChannels = () => {\n//     axios.get('https://localhost:4000/v1/channels', \n//     {\n//       headers: {\n//         \"Authorization\": authentication.auth.token\n//       }\n//     }\n//     ).then(response => {\n//         let channels = response.data.map(results => {\n//           return {\n//             name: results.name,\n//             description: results.description,\n//             channelID: results.id\n//           }\n//         })\n//         setConversations([...conversations, ...channels])\n//     });\n//   }\n//   function postChannels(e) {\n//     e.preventDefault();\n//     Axios({\n//       method: 'POST', \n//       url: \"https://localhost:4000/v1/channels\",\n//       headers: {\n//           Authorization: authentication.auth.token\n//       },\n//       data: {\n//           name: name,\n//           description: description,\n//           private: channelType == \"private\"\n//       }\n//     }).then(result => {\n//         if (result.status == 200) {\n//           window.location.reload(false);\n//         }\n//     }).catch(e => {\n//         console.log(e);\n//     })\n//    } \n//     return (\n//       <div className=\"conversation-list\">\n//         <Toolbar\n//           title=\"Channels\"\n//           leftItems={[\n//             <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n//           ]}\n//           rightItems={[\n//             // <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n//             <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 8 8\"data-toggle=\"modal\" data-target=\"#channelModal\" data-whatever=\"@mdo\" >\n//               <path d=\"M3 0v3h-3v2h3v3h2v-3h3v-2h-3v-3h-2z\" />\n//             </svg>\n//           ]}\n//         />\n//         <ConversationSearch />\n//         {\n//           conversations.map(conversation =>\n//             <ConversationListItem\n//               key={conversation.name}\n//               data={conversation}\n//             />\n//           )\n//         }\n//         <div class=\"signup-form\">\n//           <div class=\"modal fade\" id=\"channelModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n//               <div class=\"modal-dialog\" role=\"document\">\n//                   <form class=\"form-horizontal\">\n//                       <div class=\"col-xs-8 col-xs-offset-4\">\n//                           <h2>Create Channel</h2>\n//                       </div>\t\t\n//                       <div class=\"form-group\">\n//                           <label class=\"control-label col-xs-4\">Channel Name</label>\n//                           <div class=\"col-xs-8\">\n//                               <input type=\"text\" class=\"form-control\" name=\"channel_name\" required=\"required\" value ={name} onChange={e => {setChannelName(e.target.value)}}/>\n//                           </div>        \t\n//                       </div>\n//                       <div class=\"form-group\">\n//                           <label class=\"control-label col-xs-4\">Description</label>\n//                           <div class=\"col-xs-8\">\n//                               <input type=\"text\" class=\"form-control\" name=\"channel_description\" value ={description} onChange={e => {setDescription(e.target.value)}}\n//                               />\n//                           </div>        \t\n//                       </div>\n//                       <div class=\"form-group\">\n//                           <label class=\"control-label col-xs-4\" for=\"defaultChecked\">Public</label>\n//                           <div class=\"col-xs-8\">\n//                             <input type=\"radio\" class=\"custom-control-input\" id=\"defaultChecked\" value = \"public\" name=\"defaultExampleRadios\" onClick={e => {setChannelType(e.target.value)}} checked/>\n//                           </div>\n//                       </div>\n//                       <div class=\"form-group\">\n//                           <label class=\"control-label col-xs-4\" for=\"defaultUnchecked\">Private</label>\n//                           <div class=\"col-xs-8\">\n//                             <input type=\"radio\" class=\"custom-control-input\" id=\"defaultUnchecked\" value = \"private\" name=\"defaultExampleRadios\" onClick={e => {setChannelType(e.target.value)}}/>\n//                           </div>\n//                       </div>\n//                       <div id =\"update-response\" class=\"text-center\">\n//                           {/* <p style={{color: this.state.color}}>{this.state.message}</p> */}\n//                       </div>\n//                       <div class=\"form-group\">\n//                           <div class=\"col-xs-8 col-xs-offset-4\">\n//                               <button class=\"btn btn-primary btn-sm\" onClick={e => postChannels(e)}>Create</button>\n//                           </div>  \n//                           <div class=\"col-xs-8 col-xs-offset-4\">\n//                           <button type=\"button\" class=\"btn btn-primary btn-sm\" data-dismiss=\"modal\"\n//                           >\n//                               Cancel</button>\n//                       </div> \n//                       </div>\t\n//                   </form>\n//               </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n// }","map":{"version":3,"sources":["/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/components/ConversationList/index.js"],"names":["React","useState","useEffect","useContext","useRef","ConversationSearch","ConversationListItem","MessageList","Toolbar","ToolbarButton","axios","AuthContext","Axios"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,EAAgDC,MAAhD,QAA6D,OAA7D;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAO,wBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlsourcesContent":["import React, {useState, useEffect, useContext, useRef} from 'react';\nimport ConversationSearch from '../ConversationSearch';\nimport ConversationListItem from '../ConversationListItem';\nimport MessageList from '../MessageList';\n\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport axios from 'axios';\nimport AuthContext from \"../../context/AuthContext\"\nimport './ConversationList.css';\nimport Axios from 'axios';\n\n// export default function ConversationList(props) {\n//   const [conversations, setConversations] = useState([]);\n//   const authentication = useContext(AuthContext);\n//   const [name, setChannelName] = useState(\"\");\n//   const [description, setDescription] = useState(\"\")\n//   const [channelType, setChannelType] = useState(\"public\")\n//   useEffect(() => {\n//     getChannels()\n//   },[])\n\n//  const getChannels = () => {\n//     axios.get('https://localhost:4000/v1/channels', \n//     {\n//       headers: {\n//         \"Authorization\": authentication.auth.token\n//       }\n//     }\n//     ).then(response => {\n//         let channels = response.data.map(results => {\n//           return {\n//             name: results.name,\n//             description: results.description,\n//             channelID: results.id\n//           }\n//         })\n//         setConversations([...conversations, ...channels])\n//     });\n//   }\n\n//   function postChannels(e) {\n//     e.preventDefault();\n//     Axios({\n//       method: 'POST', \n//       url: \"https://localhost:4000/v1/channels\",\n//       headers: {\n//           Authorization: authentication.auth.token\n//       },\n//       data: {\n//           name: name,\n//           description: description,\n//           private: channelType == \"private\"\n//       }\n//     }).then(result => {\n//         if (result.status == 200) {\n//           window.location.reload(false);\n//         }\n//     }).catch(e => {\n//         console.log(e);\n//     })\n//    } \n\n//     return (\n//       <div className=\"conversation-list\">\n//         <Toolbar\n//           title=\"Channels\"\n//           leftItems={[\n//             <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n//           ]}\n//           rightItems={[\n//             // <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n//             <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 8 8\"data-toggle=\"modal\" data-target=\"#channelModal\" data-whatever=\"@mdo\" >\n//               <path d=\"M3 0v3h-3v2h3v3h2v-3h3v-2h-3v-3h-2z\" />\n//             </svg>\n//           ]}\n//         />\n//         <ConversationSearch />\n//         {\n//           conversations.map(conversation =>\n//             <ConversationListItem\n//               key={conversation.name}\n//               data={conversation}\n//             />\n//           )\n//         }\n//         <div class=\"signup-form\">\n//           <div class=\"modal fade\" id=\"channelModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n//               <div class=\"modal-dialog\" role=\"document\">\n//                   <form class=\"form-horizontal\">\n//                       <div class=\"col-xs-8 col-xs-offset-4\">\n//                           <h2>Create Channel</h2>\n//                       </div>\t\t\n//                       <div class=\"form-group\">\n//                           <label class=\"control-label col-xs-4\">Channel Name</label>\n//                           <div class=\"col-xs-8\">\n//                               <input type=\"text\" class=\"form-control\" name=\"channel_name\" required=\"required\" value ={name} onChange={e => {setChannelName(e.target.value)}}/>\n//                           </div>        \t\n//                       </div>\n//                       <div class=\"form-group\">\n//                           <label class=\"control-label col-xs-4\">Description</label>\n//                           <div class=\"col-xs-8\">\n//                               <input type=\"text\" class=\"form-control\" name=\"channel_description\" value ={description} onChange={e => {setDescription(e.target.value)}}\n//                               />\n//                           </div>        \t\n//                       </div>\n//                       <div class=\"form-group\">\n//                           <label class=\"control-label col-xs-4\" for=\"defaultChecked\">Public</label>\n//                           <div class=\"col-xs-8\">\n//                             <input type=\"radio\" class=\"custom-control-input\" id=\"defaultChecked\" value = \"public\" name=\"defaultExampleRadios\" onClick={e => {setChannelType(e.target.value)}} checked/>\n//                           </div>\n//                       </div>\n//                       <div class=\"form-group\">\n//                           <label class=\"control-label col-xs-4\" for=\"defaultUnchecked\">Private</label>\n//                           <div class=\"col-xs-8\">\n//                             <input type=\"radio\" class=\"custom-control-input\" id=\"defaultUnchecked\" value = \"private\" name=\"defaultExampleRadios\" onClick={e => {setChannelType(e.target.value)}}/>\n//                           </div>\n//                       </div>\n//                       <div id =\"update-response\" class=\"text-center\">\n//                           {/* <p style={{color: this.state.color}}>{this.state.message}</p> */}\n//                       </div>\n//                       <div class=\"form-group\">\n//                           <div class=\"col-xs-8 col-xs-offset-4\">\n//                               <button class=\"btn btn-primary btn-sm\" onClick={e => postChannels(e)}>Create</button>\n//                           </div>  \n//                           <div class=\"col-xs-8 col-xs-offset-4\">\n//                           <button type=\"button\" class=\"btn btn-primary btn-sm\" data-dismiss=\"modal\"\n//                           >\n//                               Cancel</button>\n//                       </div> \n//                       </div>\t\n//                   </form>\n//               </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n// }"]},"metadata":{},"sourceType":"module"}