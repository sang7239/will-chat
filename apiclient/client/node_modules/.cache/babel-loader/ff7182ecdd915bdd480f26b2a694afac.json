{"ast":null,"code":"var _jsxFileName = \"/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/components/ConversationList/index.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport ConversationSearch from '../ConversationSearch';\nimport ConversationListItem from '../ConversationListItem';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport axios from 'axios';\nimport AuthContext from \"../../context/AuthContext\";\nimport './ConversationList.css';\nexport default function ConversationList(props) {\n  const [conversations, setConversations] = useState([]);\n  const authentication = useContext(AuthContext);\n  useEffect(() => {\n    getChannels();\n  }, []);\n\n  const getChannels = () => {\n    console.log(auth.token);\n    axios.get('https://localhost:4000/v1/channels', {\n      headers: {\n        \"Authorization\": authentication.auth.token\n      }\n    }).then(response => {\n      let newConversations = response.data.results.map(result => {\n        // return {\n        //   photo: result.picture.large,\n        //   name: `${result.name.first} ${result.name.last}`,\n        //   text: 'Hello world! This is a long message that needs to be truncated.'\n        // };\n        console.log(result);\n      });\n      setConversations([...conversations, ...newConversations]);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    title: \"Messenger\",\n    leftItems: [/*#__PURE__*/React.createElement(ToolbarButton, {\n      key: \"cog\",\n      icon: \"ion-ios-cog\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    })],\n    rightItems: [/*#__PURE__*/React.createElement(ToolbarButton, {\n      key: \"add\",\n      icon: \"ion-ios-add-circle-outline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ConversationSearch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), conversations.map(conversation => /*#__PURE__*/React.createElement(ConversationListItem, {\n    key: conversation.name,\n    data: conversation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/components/ConversationList/index.js"],"names":["React","useState","useEffect","useContext","ConversationSearch","ConversationListItem","Toolbar","ToolbarButton","axios","AuthContext","ConversationList","props","conversations","setConversations","authentication","getChannels","console","log","auth","token","get","headers","then","response","newConversations","data","results","map","result","conversation","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAO,wBAAP;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC9C,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAMa,cAAc,GAAGX,UAAU,CAACM,WAAD,CAAjC;AACAP,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,WAAW;AACZ,GAFQ,EAEP,EAFO,CAAT;;AAID,QAAMA,WAAW,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAjB;AACCX,IAAAA,KAAK,CAACY,GAAN,CAAU,oCAAV,EACA;AACEC,MAAAA,OAAO,EAAE;AACP,yBAAiBP,cAAc,CAACI,IAAf,CAAoBC;AAD9B;AADX,KADA,EAMEG,IANF,CAMOC,QAAQ,IAAI;AACf,UAAIC,gBAAgB,GAAGD,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsBC,GAAtB,CAA0BC,MAAM,IAAI;AACzD;AACA;AACA;AACA;AACA;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,MAAZ;AACD,OAPsB,CAAvB;AAQAf,MAAAA,gBAAgB,CAAC,CAAC,GAAGD,aAAJ,EAAmB,GAAGY,gBAAtB,CAAD,CAAhB;AACH,KAhBD;AAiBD,GAnBF;;AAqBG,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,SAAS,EAAE,cACT,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAC,KAAnB;AAAyB,MAAA,IAAI,EAAC,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS,CAFb;AAKE,IAAA,UAAU,EAAE,cACV,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAC,KAAnB;AAAyB,MAAA,IAAI,EAAC,4BAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAYIZ,aAAa,CAACe,GAAd,CAAkBE,YAAY,iBAC5B,oBAAC,oBAAD;AACE,IAAA,GAAG,EAAEA,YAAY,CAACC,IADpB;AAEE,IAAA,IAAI,EAAED,YAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZJ,CADF;AAsBH","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport ConversationSearch from '../ConversationSearch';\nimport ConversationListItem from '../ConversationListItem';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport axios from 'axios';\nimport AuthContext from \"../../context/AuthContext\"\nimport './ConversationList.css';\n\nexport default function ConversationList(props) {\n  const [conversations, setConversations] = useState([]);\n  const authentication = useContext(AuthContext);\n  useEffect(() => {\n    getChannels()\n  },[])\n\n const getChannels = () => {\n   console.log(auth.token)\n    axios.get('https://localhost:4000/v1/channels', \n    {\n      headers: {\n        \"Authorization\": authentication.auth.token\n      }\n    }\n    ).then(response => {\n        let newConversations = response.data.results.map(result => {\n          // return {\n          //   photo: result.picture.large,\n          //   name: `${result.name.first} ${result.name.last}`,\n          //   text: 'Hello world! This is a long message that needs to be truncated.'\n          // };\n          console.log(result)\n        });\n        setConversations([...conversations, ...newConversations])\n    });\n  }\n\n    return (\n      <div className=\"conversation-list\">\n        <Toolbar\n          title=\"Messenger\"\n          leftItems={[\n            <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n          ]}\n          rightItems={[\n            <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n          ]}\n        />\n        <ConversationSearch />\n        {\n          conversations.map(conversation =>\n            <ConversationListItem\n              key={conversation.name}\n              data={conversation}\n            />\n          )\n        }\n      </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}