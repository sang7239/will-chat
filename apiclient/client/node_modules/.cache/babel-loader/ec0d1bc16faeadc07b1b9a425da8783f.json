{"ast":null,"code":"var _jsxFileName = \"/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/components/ConversationListItem/index.js\";\nimport React, { useState, useEffect, useContext, Component } from 'react';\nimport shave from 'shave';\nimport './ConversationListItem.css';\nimport MessageList from '../MessageList';\nimport ChannelContext from '../../context/ChannelContext';\nimport axios from 'axios';\nimport AuthContext from '../../context/AuthContext'; // export default function ConversationListItem(props) {\n//   useEffect(() => {\n//     shave('.conversation-snippet', 20);\n//   })\n//   const [messages, setMessages] = useState([])\n//   const { name, description, channelID } = props.data;\n//   const {setChannel} = useContext(ChannelContext)\n//   function displayMessages(e) {\n//     console.log(props.data)\n//     console.log(channelID);\n//   }\n//   return (\n//     <div>\n//       <div className=\"conversation-list-item\" >\n//         <div className=\"conversation-info\">\n//           <h1 className=\"conversation-title\">{ name }</h1>\n//           <p className=\"conversation-snippet\">{ description }</p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\nexport default class ConversationListItem extends Component {\n  // useEffect(() => {\n  //   shave('.conversation-snippet', 20);\n  // })\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.data.name,\n      description: this.props.data.description,\n      channelID: this.props.data.channelID\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"conversation-list-item\",\n      onClick: this.props.updateCurrentChannel(e, this.state.channelID),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"conversation-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"conversation-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, this.state.name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"conversation-snippet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, this.state.description))));\n  }\n\n}","map":{"version":3,"sources":["/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/components/ConversationListItem/index.js"],"names":["React","useState","useEffect","useContext","Component","shave","MessageList","ChannelContext","axios","AuthContext","ConversationListItem","constructor","props","state","name","data","description","channelID","render","updateCurrentChannel","e"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,EAAgDC,SAAhD,QAAgE,OAAhE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,4BAAP;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,MAAMC,oBAAN,SAAmCN,SAAnC,CAA6C;AAC1D;AACA;AACA;AACAO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG,IAAX,CAAgBD,IADX;AAEXE,MAAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWG,IAAX,CAAgBC,WAFlB;AAGXC,MAAAA,SAAS,EAAE,KAAKL,KAAL,CAAWG,IAAX,CAAgBE;AAHhB,KAAb;AAKD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAwC,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWO,oBAAX,CAAgCC,CAAhC,EAAmC,KAAKP,KAAL,CAAWI,SAA9C,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqC,KAAKJ,KAAL,CAAWC,IAAhD,CADF,eAEE;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC,KAAKD,KAAL,CAAWG,WAAjD,CAFF,CADF,CADF,CADF;AAUD;;AAvByD","sourcesContent":["import React, {useState, useEffect, useContext, Component} from 'react';\nimport shave from 'shave';\n\nimport './ConversationListItem.css';\nimport MessageList from '../MessageList';\nimport ChannelContext from '../../context/ChannelContext'\nimport axios from 'axios';\nimport AuthContext from '../../context/AuthContext';\n\n// export default function ConversationListItem(props) {\n//   useEffect(() => {\n//     shave('.conversation-snippet', 20);\n//   })\n//   const [messages, setMessages] = useState([])\n//   const { name, description, channelID } = props.data;\n//   const {setChannel} = useContext(ChannelContext)\n//   function displayMessages(e) {\n//     console.log(props.data)\n//     console.log(channelID);\n//   }\n//   return (\n//     <div>\n//       <div className=\"conversation-list-item\" >\n//         <div className=\"conversation-info\">\n//           <h1 className=\"conversation-title\">{ name }</h1>\n//           <p className=\"conversation-snippet\">{ description }</p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\nexport default class ConversationListItem extends Component {\n  // useEffect(() => {\n  //   shave('.conversation-snippet', 20);\n  // })\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.data.name,\n      description: this.props.data.description,\n      channelID: this.props.data.channelID\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"conversation-list-item\" onClick={this.props.updateCurrentChannel(e, this.state.channelID)}>\n          <div className=\"conversation-info\">\n            <h1 className=\"conversation-title\">{ this.state.name }</h1>\n            <p className=\"conversation-snippet\">{ this.state.description }</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}