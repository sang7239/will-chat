{"ast":null,"code":"var _jsxFileName = \"/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/context/AuthContext.js\";\nimport React, { Component } from 'react';\nconst AuthContext = React.createContext();\n\nclass AuthProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      auth: {\n        token: null,\n        isLoggedIn: false\n      }\n    };\n\n    this.setAuth = auth => {\n      this.setState(prevState => ({\n        auth\n      }));\n      localStorage.setItem(\"token\", auth.token);\n    };\n\n    this.removeAuth = auth => {\n      this.setState(prevState => ({\n        auth\n      }));\n      localStorage.removeItem(\"token\", auth.token);\n    };\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    const {\n      auth\n    } = this.state;\n    const {\n      setAuth\n    } = this;\n    const {\n      removeAuth\n    } = this;\n    return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n      value: {\n        auth,\n        setAuth,\n        removeAuth\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, children);\n  }\n\n}\n\nexport default AuthContext;\nexport { AuthProvider };","map":{"version":3,"sources":["/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/context/AuthContext.js"],"names":["React","Component","AuthContext","createContext","AuthProvider","state","auth","token","isLoggedIn","setAuth","setState","prevState","localStorage","setItem","removeAuth","removeItem","render","children","props"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,MAAMC,WAAW,GAAGF,KAAK,CAACG,aAAN,EAApB;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEjCI,KAFiC,GAEzB;AACNC,MAAAA,IAAI,EAAE;AAACC,QAAAA,KAAK,EAAE,IAAR;AAAcC,QAAAA,UAAU,EAAE;AAA1B;AADA,KAFyB;;AAAA,SAOjCC,OAPiC,GAOtBH,IAAD,IAAU;AAClB,WAAKI,QAAL,CAAeC,SAAD,KAAgB;AAAEL,QAAAA;AAAF,OAAhB,CAAd;AACAM,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BP,IAAI,CAACC,KAAnC;AACD,KAVgC;;AAAA,SAYjCO,UAZiC,GAYnBR,IAAD,IAAU;AACrB,WAAKI,QAAL,CAAeC,SAAD,KAAgB;AAACL,QAAAA;AAAD,OAAhB,CAAd;AACAM,MAAAA,YAAY,CAACG,UAAb,CAAwB,OAAxB,EAAiCT,IAAI,CAACC,KAAtC;AACD,KAfgC;AAAA;;AAmBjCS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,UAAM;AAAEZ,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAc,IAApB;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAgB,IAAtB;AACA,wBACE,oBAAC,WAAD,CAAa,QAAb;AACE,MAAA,KAAK,EAAE;AACLR,QAAAA,IADK;AAELG,QAAAA,OAFK;AAGLK,QAAAA;AAHK,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGG,QAPH,CADF;AAWD;;AAnCgC;;AAsCnC,eAAef,WAAf;AAEA,SAASE,YAAT","sourcesContent":["import React, {Component} from 'react'\n\nconst AuthContext = React.createContext()\n\nclass AuthProvider extends Component {\n    // Context state\n    state = {\n      auth: {token: null, isLoggedIn: false},\n    }\n  \n    // Method to update state\n    setAuth = (auth) => {\n      this.setState((prevState) => ({ auth }))\n      localStorage.setItem(\"token\", auth.token);\n    }\n\n    removeAuth = (auth) => {\n      this.setState((prevState) => ({auth}))\n      localStorage.removeItem(\"token\", auth.token);\n    }\n\n\n  \n    render() {\n      const { children } = this.props\n      const { auth } = this.state\n      const { setAuth } = this\n      const { removeAuth} = this\n      return (\n        <AuthContext.Provider\n          value={{\n            auth,\n            setAuth,\n            removeAuth,\n          }}\n        >\n          {children}\n        </AuthContext.Provider>\n      )\n    }\n  }\n  \n  export default AuthContext\n  \n  export { AuthProvider }"]},"metadata":{},"sourceType":"module"}