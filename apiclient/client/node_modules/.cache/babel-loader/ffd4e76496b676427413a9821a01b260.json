{"ast":null,"code":"var _jsxFileName = \"/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/PrivateRoute.js\";\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext, { AuthProvider } from \"./context/AuthContext\";\n\nfunction PrivateRoute({\n  component: Component,\n  ...rest\n}) {\n  const isAuthenticated = useContext(AuthContext);\n  console.log(isAuthenticated);\n  console.log(isAuthenticated.loggedIn);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => isAuthenticated ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","AuthContext","AuthProvider","PrivateRoute","component","Component","rest","isAuthenticated","console","log","loggedIn","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,OAAOC,WAAP,IAAsBC,YAAtB,QAA0C,uBAA1C;;AAEA,SAASC,YAAT,CAAsB;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAtB,EAAuD;AACnD,QAAMC,eAAe,GAAGT,UAAU,CAACG,WAAD,CAAlC;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,eAAe,CAACG,QAA5B;AACA,sBACI,oBAAC,KAAD,oBACQJ,IADR;AAEI,IAAA,MAAM,EAAEK,KAAK,IACTJ,eAAe,gBACf,oBAAC,SAAD,oBAAeI,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADe,gBAGnB,oBAAC,QAAD;AACI,MAAA,EAAE,EAAC,OADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAcH;;AACD,eAAeR,YAAf","sourcesContent":["import React, { useContext } from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport AuthContext, { AuthProvider } from \"./context/AuthContext\";\n\nfunction PrivateRoute({component: Component, ...rest}) {\n    const isAuthenticated = useContext(AuthContext);\n    console.log(isAuthenticated);\n    console.log(isAuthenticated.loggedIn);\n    return (\n        <Route \n            {...rest} \n            render={props => \n                isAuthenticated ? (\n                <Component {...props} />\n            ) : (\n            <Redirect\n                to=\"/home\"\n              />\n            )\n        } \n        />\n    );\n}\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}