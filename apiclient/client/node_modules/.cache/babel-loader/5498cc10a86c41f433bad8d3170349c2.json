{"ast":null,"code":"var _jsxFileName = \"/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/context/UserContext.js\";\nimport React from 'react';\nconst UserContext = React.createContext();\n\nclass UserProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {}\n    };\n\n    this.setUser = user => {\n      this.setState(prevState => ({\n        user\n      }));\n    };\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    const {\n      user\n    } = this.state;\n    const {\n      setUser\n    } = this;\n    return /*#__PURE__*/React.createElement(UserContext.Provider, {\n      value: {\n        user,\n        setUser\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, children);\n  }\n\n}\n\nexport default UserContext;\nexport { UserProvider };","map":{"version":3,"sources":["/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/context/UserContext.js"],"names":["React","UserContext","createContext","UserProvider","Component","state","user","setUser","setState","prevState","render","children","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,WAAW,GAAGD,KAAK,CAACE,aAAN,EAApB;;AAEA,MAAMC,YAAN,SAA2BC,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEjCC,KAFiC,GAEzB;AACNC,MAAAA,IAAI,EAAE;AADA,KAFyB;;AAAA,SAOjCC,OAPiC,GAOtBD,IAAD,IAAU;AAClB,WAAKE,QAAL,CAAeC,SAAD,KAAgB;AAAEH,QAAAA;AAAF,OAAhB,CAAd;AACD,KATgC;AAAA;;AAWjCI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,UAAM;AAAEN,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAc,IAApB;AAEA,wBACE,oBAAC,WAAD,CAAa,QAAb;AACE,MAAA,KAAK,EAAE;AACLD,QAAAA,IADK;AAELC,QAAAA;AAFK,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGI,QANH,CADF;AAUD;;AA1BgC;;AA6BnC,eAAeV,WAAf;AAEA,SAASE,YAAT","sourcesContent":["import React from 'react'\n\nconst UserContext = React.createContext()\n\nclass UserProvider extends Component {\n    // Context state\n    state = {\n      user: {},\n    }\n  \n    // Method to update state\n    setUser = (user) => {\n      this.setState((prevState) => ({ user }))\n    }\n  \n    render() {\n      const { children } = this.props\n      const { user } = this.state\n      const { setUser } = this\n  \n      return (\n        <UserContext.Provider\n          value={{\n            user,\n            setUser,\n          }}\n        >\n          {children}\n        </UserContext.Provider>\n      )\n    }\n  }\n  \n  export default UserContext\n  \n  export { UserProvider }"]},"metadata":{},"sourceType":"module"}