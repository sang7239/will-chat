{"ast":null,"code":"var _jsxFileName = \"/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/components/MessageList/index.js\";\nimport React, { useEffect, useState, useContext, Component } from 'react';\nimport Compose from '../Compose';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport Message from '../Message';\nimport moment from 'moment';\nimport ChannelContext from '../../context/ChannelContext';\nimport './MessageList.css';\nimport axios from 'axios';\nimport AuthContext from '../../context/AuthContext'; // export default function MessageList(props) {\n//   const MY_USER_ID = 'apple';\n//   const [messages, setMessages] = useState([])\n//   const authentication = useContext(AuthContext);\n//   const channelContext = useContext(ChannelContext)\n//   useEffect(() => {\n//     getMessages();\n//   },[])\n// const getMessages = (props) => {\n//   axios.get('https://localhost:4000/v1/channels/'+ channelContext.channel.id, \n//   {\n//     headers: {\n//       \"Authorization\": authentication.auth.token\n//     }\n//   }\n//   ).then(response => {\n//       let msgs = response.data.map(results => {\n//         return {\n//           author: 'apple',\n//           message: results.body,\n//           timestamp: results.createdAt,\n//         }\n//       })\n//       setMessages([...messages, ...msgs])\n//   });\n//   // var tempMessages = [\n//   //   {\n//   //     id: 1,\n//   //     author: 'apple',\n//   //     message: \"hi\",\n//   //     timestamp: new Date().getTime()\n//   //   },\n//   // ]\n//   // setMessages([...messages, ...tempMessages])\n// }\n//   const renderMessages = () => {\n//     let i = 0;\n//     let messageCount = messages.length;\n//     let tempMessages = [];\n//     while (i < messageCount) {\n//       let previous = messages[i - 1];\n//       let current = messages[i];\n//       let next = messages[i + 1];\n//       let isMine = current.author === MY_USER_ID;\n//       let currentMoment = moment(current.timestamp);\n//       let prevBySameAuthor = false;\n//       let nextBySameAuthor = false;\n//       let startsSequence = true;\n//       let endsSequence = true;\n//       let showTimestamp = true;\n//       if (previous) {\n//         let previousMoment = moment(previous.timestamp);\n//         let previousDuration = moment.duration(currentMoment.diff(previousMoment));\n//         prevBySameAuthor = previous.author === current.author;\n//         if (prevBySameAuthor && previousDuration.as('hours') < 1) {\n//           startsSequence = false;\n//         }\n//         if (previousDuration.as('hours') < 1) {\n//           showTimestamp = false;\n//         }\n//       }\n//       if (next) {\n//         let nextMoment = moment(next.timestamp);\n//         let nextDuration = moment.duration(nextMoment.diff(currentMoment));\n//         nextBySameAuthor = next.author === current.author;\n//         if (nextBySameAuthor && nextDuration.as('hours') < 1) {\n//           endsSequence = false;\n//         }\n//       }\n//       tempMessages.push(\n//         <Message\n//           key={i}\n//           isMine={isMine}\n//           startsSequence={startsSequence}\n//           endsSequence={endsSequence}\n//           showTimestamp={showTimestamp}\n//           data={current}\n//         />\n//       );\n//       // Proceed to the next message.\n//       i += 1;\n//     }\n//     return tempMessages;\n//   }\n//     return(\n//       <div className=\"message-list\">\n//         <Toolbar\n//           title=\"Conversation Title\"\n//           rightItems={[\n//             <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n//             <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n//             <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n//           ]}\n//         />\n//         <div className=\"message-list-container\">{\n//           renderMessages()\n//         }</div>\n//         <Compose rightItems={[\n//           <ToolbarButton key=\"photo\" icon=\"ion-ios-camera\" />,\n//           <ToolbarButton key=\"image\" icon=\"ion-ios-image\" />,\n//           <ToolbarButton key=\"audio\" icon=\"ion-ios-mic\" />,\n//           <ToolbarButton key=\"money\" icon=\"ion-ios-card\" />,\n//           <ToolbarButton key=\"games\" icon=\"ion-logo-game-controller-b\" />,\n//           <ToolbarButton key=\"emoji\" icon=\"ion-ios-happy\" />\n//         ]}/>\n//       </div>\n//     );\n// }\n\nexport default class MessageList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getMessages = () => {\n      const {\n        channel\n      } = this.channelcontext;\n      const {\n        auth\n      } = this.authcontext;\n      axios.get('https://localhost:4000/v1/channels/' + '5f153e1b2456a86615304118', {\n        headers: {\n          \"Authorization\": auth.auth.token\n        }\n      }).then(response => {\n        let msgs = response.data.map(results => {\n          return {\n            author: 'apple',\n            message: results.body,\n            timestamp: results.createdAt\n          };\n        });\n        this.setState({\n          messages: msgs\n        });\n      });\n    };\n\n    this.renderMessages = () => {\n      let i = 0;\n      let messageCount = this.state.messages.length;\n      let tempMessages = [];\n\n      while (i < messageCount) {\n        let previous = this.state.messages[i - 1];\n        let current = this.state.messages[i];\n        let next = this.state.messages[i + 1];\n        let isMine = current.author === 'apple';\n        let currentMoment = moment(current.timestamp);\n        let prevBySameAuthor = false;\n        let nextBySameAuthor = false;\n        let startsSequence = true;\n        let endsSequence = true;\n        let showTimestamp = true;\n\n        if (previous) {\n          let previousMoment = moment(previous.timestamp);\n          let previousDuration = moment.duration(currentMoment.diff(previousMoment));\n          prevBySameAuthor = previous.author === current.author;\n\n          if (prevBySameAuthor && previousDuration.as('hours') < 1) {\n            startsSequence = false;\n          }\n\n          if (previousDuration.as('hours') < 1) {\n            showTimestamp = false;\n          }\n        }\n\n        if (next) {\n          let nextMoment = moment(next.timestamp);\n          let nextDuration = moment.duration(nextMoment.diff(currentMoment));\n          nextBySameAuthor = next.author === current.author;\n\n          if (nextBySameAuthor && nextDuration.as('hours') < 1) {\n            endsSequence = false;\n          }\n        }\n\n        tempMessages.push( /*#__PURE__*/React.createElement(Message, {\n          key: i,\n          isMine: isMine,\n          startsSequence: startsSequence,\n          endsSequence: endsSequence,\n          showTimestamp: showTimestamp,\n          data: current,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 9\n          }\n        })); // Proceed to the next message.\n\n        i += 1;\n      }\n\n      return tempMessages;\n    };\n\n    this.state = {\n      messages: []\n    };\n  }\n\n  componentDidMount() {\n    const authContext = this.authcontext;\n    const channelContext = this.channelcontext;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      title: \"Conversation Title\",\n      rightItems: [/*#__PURE__*/React.createElement(ToolbarButton, {\n        key: \"info\",\n        icon: \"ion-ios-information-circle-outline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(ToolbarButton, {\n        key: \"video\",\n        icon: \"ion-ios-videocam\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(ToolbarButton, {\n        key: \"phone\",\n        icon: \"ion-ios-call\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-list-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }\n    }, this.renderMessages()), /*#__PURE__*/React.createElement(Compose, {\n      rightItems: [/*#__PURE__*/React.createElement(ToolbarButton, {\n        key: \"photo\",\n        icon: \"ion-ios-camera\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ToolbarButton, {\n        key: \"image\",\n        icon: \"ion-ios-image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ToolbarButton, {\n        key: \"audio\",\n        icon: \"ion-ios-mic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ToolbarButton, {\n        key: \"money\",\n        icon: \"ion-ios-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ToolbarButton, {\n        key: \"games\",\n        icon: \"ion-logo-game-controller-b\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ToolbarButton, {\n        key: \"emoji\",\n        icon: \"ion-ios-happy\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nMessageList.contextType = AuthContext;","map":{"version":3,"sources":["/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/components/MessageList/index.js"],"names":["React","useEffect","useState","useContext","Component","Compose","Toolbar","ToolbarButton","Message","moment","ChannelContext","axios","AuthContext","MessageList","constructor","props","getMessages","channel","channelcontext","auth","authcontext","get","headers","token","then","response","msgs","data","map","results","author","message","body","timestamp","createdAt","setState","messages","renderMessages","i","messageCount","state","length","tempMessages","previous","current","next","isMine","currentMoment","prevBySameAuthor","nextBySameAuthor","startsSequence","endsSequence","showTimestamp","previousMoment","previousDuration","duration","diff","as","nextMoment","nextDuration","push","componentDidMount","authContext","channelContext","render","contextType"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useContext, Component} from 'react';\nimport Compose from '../Compose';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport Message from '../Message';\nimport moment from 'moment';\nimport ChannelContext from '../../context/ChannelContext'\nimport './MessageList.css';\nimport axios from 'axios';\nimport AuthContext from '../../context/AuthContext';\n\n\n// export default function MessageList(props) {\n//   const MY_USER_ID = 'apple';\n//   const [messages, setMessages] = useState([])\n//   const authentication = useContext(AuthContext);\n//   const channelContext = useContext(ChannelContext)\n//   useEffect(() => {\n//     getMessages();\n//   },[])\n  \n  // const getMessages = (props) => {\n  //   axios.get('https://localhost:4000/v1/channels/'+ channelContext.channel.id, \n  //   {\n  //     headers: {\n  //       \"Authorization\": authentication.auth.token\n  //     }\n  //   }\n  //   ).then(response => {\n  //       let msgs = response.data.map(results => {\n  //         return {\n  //           author: 'apple',\n  //           message: results.body,\n  //           timestamp: results.createdAt,\n  //         }\n  //       })\n  //       setMessages([...messages, ...msgs])\n  //   });\n  //   // var tempMessages = [\n  //   //   {\n  //   //     id: 1,\n  //   //     author: 'apple',\n  //   //     message: \"hi\",\n  //   //     timestamp: new Date().getTime()\n  //   //   },\n  //   // ]\n  //   // setMessages([...messages, ...tempMessages])\n  // }\n\n//   const renderMessages = () => {\n//     let i = 0;\n//     let messageCount = messages.length;\n//     let tempMessages = [];\n\n//     while (i < messageCount) {\n//       let previous = messages[i - 1];\n//       let current = messages[i];\n//       let next = messages[i + 1];\n//       let isMine = current.author === MY_USER_ID;\n//       let currentMoment = moment(current.timestamp);\n//       let prevBySameAuthor = false;\n//       let nextBySameAuthor = false;\n//       let startsSequence = true;\n//       let endsSequence = true;\n//       let showTimestamp = true;\n\n//       if (previous) {\n//         let previousMoment = moment(previous.timestamp);\n//         let previousDuration = moment.duration(currentMoment.diff(previousMoment));\n//         prevBySameAuthor = previous.author === current.author;\n        \n//         if (prevBySameAuthor && previousDuration.as('hours') < 1) {\n//           startsSequence = false;\n//         }\n\n//         if (previousDuration.as('hours') < 1) {\n//           showTimestamp = false;\n//         }\n//       }\n\n//       if (next) {\n//         let nextMoment = moment(next.timestamp);\n//         let nextDuration = moment.duration(nextMoment.diff(currentMoment));\n//         nextBySameAuthor = next.author === current.author;\n\n//         if (nextBySameAuthor && nextDuration.as('hours') < 1) {\n//           endsSequence = false;\n//         }\n//       }\n\n//       tempMessages.push(\n//         <Message\n//           key={i}\n//           isMine={isMine}\n//           startsSequence={startsSequence}\n//           endsSequence={endsSequence}\n//           showTimestamp={showTimestamp}\n//           data={current}\n//         />\n//       );\n\n//       // Proceed to the next message.\n//       i += 1;\n//     }\n\n//     return tempMessages;\n//   }\n\n//     return(\n//       <div className=\"message-list\">\n//         <Toolbar\n//           title=\"Conversation Title\"\n//           rightItems={[\n//             <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n//             <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n//             <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n//           ]}\n//         />\n\n//         <div className=\"message-list-container\">{\n//           renderMessages()\n//         }</div>\n\n//         <Compose rightItems={[\n//           <ToolbarButton key=\"photo\" icon=\"ion-ios-camera\" />,\n//           <ToolbarButton key=\"image\" icon=\"ion-ios-image\" />,\n//           <ToolbarButton key=\"audio\" icon=\"ion-ios-mic\" />,\n//           <ToolbarButton key=\"money\" icon=\"ion-ios-card\" />,\n//           <ToolbarButton key=\"games\" icon=\"ion-logo-game-controller-b\" />,\n//           <ToolbarButton key=\"emoji\" icon=\"ion-ios-happy\" />\n//         ]}/>\n//       </div>\n//     );\n// }\n\nexport default class MessageList extends Component {\n  static contextType = AuthContext\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: []\n    }\n  }\n  componentDidMount() {\n    const authContext = this.authcontext\n    const channelContext = this.channelcontext\n  }\n  getMessages = () => {\n    const {channel} = this.channelcontext\n    const {auth} = this.authcontext\n    axios.get('https://localhost:4000/v1/channels/'+ '5f153e1b2456a86615304118', \n    {\n      headers: {\n        \"Authorization\": auth.auth.token\n      }\n    }\n    ).then(response => {\n        let msgs = response.data.map(results => {\n          return {\n            author: 'apple',\n            message: results.body,\n            timestamp: results.createdAt,\n          }\n        })\n        this.setState({messages: msgs})\n    });\n  }\n  renderMessages = () => {\n    let i = 0;\n    let messageCount = this.state.messages.length;\n    let tempMessages = [];\n\n    while (i < messageCount) {\n      let previous = this.state.messages[i - 1];\n      let current = this.state.messages[i];\n      let next = this.state.messages[i + 1];\n      let isMine = current.author === 'apple';\n      let currentMoment = moment(current.timestamp);\n      let prevBySameAuthor = false;\n      let nextBySameAuthor = false;\n      let startsSequence = true;\n      let endsSequence = true;\n      let showTimestamp = true;\n\n      if (previous) {\n        let previousMoment = moment(previous.timestamp);\n        let previousDuration = moment.duration(currentMoment.diff(previousMoment));\n        prevBySameAuthor = previous.author === current.author;\n        \n        if (prevBySameAuthor && previousDuration.as('hours') < 1) {\n          startsSequence = false;\n        }\n\n        if (previousDuration.as('hours') < 1) {\n          showTimestamp = false;\n        }\n      }\n\n      if (next) {\n        let nextMoment = moment(next.timestamp);\n        let nextDuration = moment.duration(nextMoment.diff(currentMoment));\n        nextBySameAuthor = next.author === current.author;\n\n        if (nextBySameAuthor && nextDuration.as('hours') < 1) {\n          endsSequence = false;\n        }\n      }\n\n      tempMessages.push(\n        <Message\n          key={i}\n          isMine={isMine}\n          startsSequence={startsSequence}\n          endsSequence={endsSequence}\n          showTimestamp={showTimestamp}\n          data={current}\n        />\n      );\n\n      // Proceed to the next message.\n      i += 1;\n    }\n    return tempMessages;\n  }\n\n  render() {\n    return(\n      <div className=\"message-list\">\n        <Toolbar\n          title=\"Conversation Title\"\n          rightItems={[\n            <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n            <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n            <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n          ]}\n        />\n\n        <div className=\"message-list-container\">{\n          \n          this.renderMessages()\n        }</div>\n\n        <Compose rightItems={[\n          <ToolbarButton key=\"photo\" icon=\"ion-ios-camera\" />,\n          <ToolbarButton key=\"image\" icon=\"ion-ios-image\" />,\n          <ToolbarButton key=\"audio\" icon=\"ion-ios-mic\" />,\n          <ToolbarButton key=\"money\" icon=\"ion-ios-card\" />,\n          <ToolbarButton key=\"games\" icon=\"ion-logo-game-controller-b\" />,\n          <ToolbarButton key=\"emoji\" icon=\"ion-ios-happy\" />\n        ]}/>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}