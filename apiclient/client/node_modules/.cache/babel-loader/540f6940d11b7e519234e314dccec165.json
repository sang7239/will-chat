{"ast":null,"code":"var _jsxFileName = \"/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/components/ConversationListItem/index.js\";\nimport React, { useState, useEffect, useContext, Component } from 'react';\nimport shave from 'shave';\nimport './ConversationListItem.css';\nimport MessageList from '../MessageList';\nimport ChannelContext from '../../context/ChannelContext';\nimport axios from 'axios';\nimport AuthContext from '../../context/AuthContext';\nexport default function ConversationListItem(props) {\n  useEffect(() => {\n    shave('.conversation-snippet', 20);\n  });\n  const [messages, setMessages] = useState([]);\n  const {\n    name,\n    description,\n    channelID\n  } = props.data;\n  const authentication = useContext(AuthContext);\n\n  function displayMessages(e) {\n    e.preventDefault();\n    console.log(channelID);\n    axios.get('https://localhost:4000/v1/channels/' + channelID, {\n      headers: {\n        \"Authorization\": authentication.auth.token\n      }\n    }).then(response => {\n      let msgs = response.data.map(results => {\n        return {\n          author: 'apple',\n          message: results.body,\n          timestamp: results.createdAt\n        };\n      });\n      setMessages([...messages, ...msgs]);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-list-item\",\n    onClick: e => displayMessages(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"conversation-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"conversation-snippet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, description))), /*#__PURE__*/React.createElement(MessageList, {\n    msgs: this.messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/components/ConversationListItem/index.js"],"names":["React","useState","useEffect","useContext","Component","shave","MessageList","ChannelContext","axios","AuthContext","ConversationListItem","props","messages","setMessages","name","description","channelID","data","authentication","displayMessages","e","preventDefault","console","log","get","headers","auth","token","then","response","msgs","map","results","author","message","body","timestamp","createdAt"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,EAAgDC,SAAhD,QAAgE,OAAhE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,4BAAP;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,eAAe,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAClDT,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CAAC,uBAAD,EAA0B,EAA1B,CAAL;AACD,GAFQ,CAAT;AAGA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAEa,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA;AAArB,MAAmCL,KAAK,CAACM,IAA/C;AACA,QAAMC,cAAc,GAAGf,UAAU,CAACM,WAAD,CAAjC;;AACA,WAASU,eAAT,CAAyBC,CAAzB,EAA4B;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACAR,IAAAA,KAAK,CAACgB,GAAN,CAAU,wCAAuCR,SAAjD,EACA;AACES,MAAAA,OAAO,EAAE;AACP,yBAAiBP,cAAc,CAACQ,IAAf,CAAoBC;AAD9B;AADX,KADA,EAMEC,IANF,CAMOC,QAAQ,IAAI;AACf,UAAIC,IAAI,GAAGD,QAAQ,CAACZ,IAAT,CAAcc,GAAd,CAAkBC,OAAO,IAAI;AACtC,eAAO;AACLC,UAAAA,MAAM,EAAE,OADH;AAELC,UAAAA,OAAO,EAAEF,OAAO,CAACG,IAFZ;AAGLC,UAAAA,SAAS,EAAEJ,OAAO,CAACK;AAHd,SAAP;AAKD,OANU,CAAX;AAOAxB,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc,GAAGkB,IAAjB,CAAD,CAAX;AACH,KAfD;AAgBD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAwC,IAAA,OAAO,EAAGV,CAAD,IAAQD,eAAe,CAACC,CAAD,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCN,IAArC,CADF,eAEE;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCC,WAAtC,CAFF,CADF,CADF,eAOE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAE,KAAKH,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAYD","sourcesContent":["import React, {useState, useEffect, useContext, Component} from 'react';\nimport shave from 'shave';\n\nimport './ConversationListItem.css';\nimport MessageList from '../MessageList';\nimport ChannelContext from '../../context/ChannelContext'\nimport axios from 'axios';\nimport AuthContext from '../../context/AuthContext';\n\nexport default function ConversationListItem(props) {\n  useEffect(() => {\n    shave('.conversation-snippet', 20);\n  })\n  const [messages, setMessages] = useState([])\n  const { name, description, channelID } = props.data;\n  const authentication = useContext(AuthContext)\n  function displayMessages(e) {\n    e.preventDefault();\n    console.log(channelID);\n    axios.get('https://localhost:4000/v1/channels/'+ channelID, \n    {\n      headers: {\n        \"Authorization\": authentication.auth.token\n      }\n    }\n    ).then(response => {\n        let msgs = response.data.map(results => {\n          return {\n            author: 'apple',\n            message: results.body,\n            timestamp: results.createdAt,\n          }\n        })\n        setMessages([...messages, ...msgs])\n    });\n  }\n  return (\n    <div>\n      <div className=\"conversation-list-item\" onClick={(e) => (displayMessages(e))}>\n        <div className=\"conversation-info\">\n          <h1 className=\"conversation-title\">{ name }</h1>\n          <p className=\"conversation-snippet\">{ description }</p>\n        </div>\n      </div>\n      <MessageList msgs={this.messages} />\n    </div>\n    \n  );\n}"]},"metadata":{},"sourceType":"module"}