{"ast":null,"code":"var _jsxFileName = \"/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/components/Messenger/index.js\";\nimport React, { Component } from 'react';\nimport ConversationList from '../ConversationList';\nimport MessageList from '../MessageList';\nimport Header from '../Header';\nimport AuthContext from \"../../context/AuthContext\";\nimport './Messenger.css';\nimport axios from \"axios\";\nexport default class Messenger extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateChannel = (channel, channelName) => {\n      const {\n        auth\n      } = this.context;\n      this.setState({\n        currentChannel: channel,\n        currentChannelName: channelName\n      });\n      axios.get(\"https://localhost:4000/v1/channels/\" + channel, {\n        headers: {\n          Authorization: auth.token\n        }\n      }).then(result => {\n        if (result.status == 200 && result.data.creatorID == this.state.currentUserID) {\n          this.setState({\n            isChannelCreator: true\n          });\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.state = {\n      currentChannelName: this.props.currentChannelName,\n      currentChannel: this.props.currentChannel,\n      currentUserID: this.props.currentUserID,\n      isChannelCreator: this.props.isChannelCreator\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messenger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"scrollable sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ConversationList, {\n      currentChannel: this.state.currentChannel,\n      updateChannel: this.updateChannel,\n      updateChannelCreator: this.updateChannelCreator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"scrollable content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      updateUser: this.updateUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(MessageList, {\n      currentChannel: this.state.currentChannel,\n      currentChannelName: this.state.currentChannelName,\n      currentUserID: this.props.currentUserID,\n      isChannelCreator: this.props.isChannelCreator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\nMessenger.contextType = AuthContext;","map":{"version":3,"sources":["/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/components/Messenger/index.js"],"names":["React","Component","ConversationList","MessageList","Header","AuthContext","axios","Messenger","constructor","props","updateChannel","channel","channelName","auth","context","setState","currentChannel","currentChannelName","get","headers","Authorization","token","then","result","status","data","creatorID","state","currentUserID","isChannelCreator","catch","e","console","log","render","updateChannelCreator","updateUser","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAO,iBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,SAAN,SAAwBN,SAAxB,CAAiC;AAE5CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,aAVmB,GAUH,CAACC,OAAD,EAAUC,WAAV,KAA0B;AACxC,YAAM;AAACC,QAAAA;AAAD,UAAS,KAAKC,OAApB;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,cAAc,EAAEL,OAAjB;AAA0BM,QAAAA,kBAAkB,EAAEL;AAA9C,OAAd;AACAN,MAAAA,KAAK,CAACY,GAAN,CAAU,wCAAwCP,OAAlD,EAA2D;AACrDQ,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAEP,IAAI,CAACQ;AADf;AAD4C,OAA3D,EAIKC,IAJL,CAIUC,MAAM,IAAI;AACd,YAAIA,MAAM,CAACC,MAAP,IAAiB,GAAjB,IAAwBD,MAAM,CAACE,IAAP,CAAYC,SAAZ,IAAyB,KAAKC,KAAL,CAAWC,aAAhE,EAA+E;AAC3E,eAAKb,QAAL,CAAc;AAACc,YAAAA,gBAAgB,EAAE;AAAnB,WAAd;AACH;AACJ,OARH,EAQKC,KARL,CAQWC,CAAC,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,OAVH;AAWD,KAxBkB;;AAEjB,SAAKJ,KAAL,GAAa;AACXV,MAAAA,kBAAkB,EAAE,KAAKR,KAAL,CAAWQ,kBADpB;AAEXD,MAAAA,cAAc,EAAE,KAAKP,KAAL,CAAWO,cAFhB;AAGXY,MAAAA,aAAa,EAAE,KAAKnB,KAAL,CAAWmB,aAHf;AAIXC,MAAAA,gBAAgB,EAAE,KAAKpB,KAAL,CAAWoB;AAJlB,KAAb;AAMD;;AAkBDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAmBE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAAkB,MAAA,cAAc,EAAE,KAAKP,KAAL,CAAWX,cAA7C;AACkB,MAAA,aAAa,EAAE,KAAKN,aADtC;AAEkB,MAAA,oBAAoB,EAAE,KAAKyB,oBAF7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAnBF,eAyBE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,UAAU,EAAE,KAAKC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,WAAD;AAAa,MAAA,cAAc,EAAE,KAAKT,KAAL,CAAWX,cAAxC;AACc,MAAA,kBAAkB,EAAE,KAAKW,KAAL,CAAWV,kBAD7C;AAEc,MAAA,aAAa,EAAE,KAAKR,KAAL,CAAWmB,aAFxC;AAGc,MAAA,gBAAgB,EAAE,KAAKnB,KAAL,CAAWoB,gBAH3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAzBF,CADF;AAmCD;;AAhE2C;AAA3BtB,S,CACV8B,W,GAAchC,W","sourcesContent":["import React, { Component } from 'react';\nimport ConversationList from '../ConversationList';\nimport MessageList from '../MessageList';\nimport Header from '../Header';\nimport AuthContext from \"../../context/AuthContext\";\nimport './Messenger.css';\nimport axios from \"axios\";\n\nexport default class Messenger extends Component{\n    static contextType = AuthContext\n    constructor(props) {\n      super(props);\n      this.state = {\n        currentChannelName: this.props.currentChannelName,\n        currentChannel: this.props.currentChannel,\n        currentUserID: this.props.currentUserID,\n        isChannelCreator: this.props.isChannelCreator\n      }\n    }\n\n    updateChannel = (channel, channelName) => {\n      const {auth} = this.context;\n      this.setState({currentChannel: channel, currentChannelName: channelName});\n      axios.get(\"https://localhost:4000/v1/channels/\" + channel, {\n            headers: {\n                Authorization: auth.token\n            }\n        }).then(result => {\n            if (result.status == 200 && result.data.creatorID == this.state.currentUserID) {\n                this.setState({isChannelCreator: true});\n            }\n        }).catch(e => {\n            console.log(e);\n        })\n    }\n\n    render() {\n      return (\n        <div className=\"messenger\">\n          {/* <Toolbar\n            title=\"Messenger\"\n            leftItems={[\n              <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n            ]}\n            rightItems={[\n              <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n            ]}\n          /> */}\n  \n          {/* <Toolbar\n            title=\"Conversation Title\"\n            rightItems={[\n              <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n              <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n              <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n            ]}\n          /> */}\n          <div className=\"scrollable sidebar\">\n            <ConversationList currentChannel={this.state.currentChannel} \n                              updateChannel={this.updateChannel}\n                              updateChannelCreator={this.updateChannelCreator}/>\n          </div>\n  \n          <div className=\"scrollable content\">\n            <Header updateUser={this.updateUser}/>\n            <MessageList currentChannel={this.state.currentChannel} \n                          currentChannelName={this.state.currentChannelName}\n                          currentUserID={this.props.currentUserID}\n                          isChannelCreator={this.props.isChannelCreator}/>\n          </div>\n        </div>\n      );\n    }\n}"]},"metadata":{},"sourceType":"module"}