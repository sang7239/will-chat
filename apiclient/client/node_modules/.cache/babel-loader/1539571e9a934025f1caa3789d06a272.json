{"ast":null,"code":"var _jsxFileName = \"/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/components/ConversationList/index.js\";\nimport React, { useState, useEffect, useContext, useRef, Component } from 'react';\nimport ConversationSearch from '../ConversationSearch';\nimport ConversationListItem from '../ConversationListItem';\nimport MessageList from '../MessageList';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport axios from 'axios';\nimport AuthContext from \"../../context/AuthContext\";\nimport './ConversationList.css';\nimport Axios from 'axios'; // export default function ConversationList(props) {\n//   const [conversations, setConversations] = useState([]);\n//   const authentication = useContext(AuthContext);\n//   const [name, setChannelName] = useState(\"\");\n//   const [description, setDescription] = useState(\"\")\n//   const [channelType, setChannelType] = useState(\"public\")\n//   useEffect(() => {\n//     getChannels()\n//   },[])\n//  const getChannels = () => {\n//     axios.get('https://localhost:4000/v1/channels', \n//     {\n//       headers: {\n//         \"Authorization\": authentication.auth.token\n//       }\n//     }\n//     ).then(response => {\n//         let channels = response.data.map(results => {\n//           return {\n//             name: results.name,\n//             description: results.description,\n//             channelID: results.id\n//           }\n//         })\n//         setConversations([...conversations, ...channels])\n//     });\n//   }\n//   function postChannels(e) {\n//     e.preventDefault();\n//     Axios({\n//       method: 'POST', \n//       url: \"https://localhost:4000/v1/channels\",\n//       headers: {\n//           Authorization: authentication.auth.token\n//       },\n//       data: {\n//           name: name,\n//           description: description,\n//           private: channelType == \"private\"\n//       }\n//     }).then(result => {\n//         if (result.status == 200) {\n//           window.location.reload(false);\n//         }\n//     }).catch(e => {\n//         console.log(e);\n//     })\n//    } \n//     return (\n//       <div className=\"conversation-list\">\n//         <Toolbar\n//           title=\"Channels\"\n//           leftItems={[\n//             <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n//           ]}\n//           rightItems={[\n//             // <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n//             <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 8 8\"data-toggle=\"modal\" data-target=\"#channelModal\" data-whatever=\"@mdo\" >\n//               <path d=\"M3 0v3h-3v2h3v3h2v-3h3v-2h-3v-3h-2z\" />\n//             </svg>\n//           ]}\n//         />\n//         <ConversationSearch />\n//         {\n//           conversations.map(conversation =>\n//             <ConversationListItem\n//               key={conversation.name}\n//               data={conversation}\n//             />\n//           )\n//         }\n//         <div class=\"signup-form\">\n//           <div class=\"modal fade\" id=\"channelModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n//               <div class=\"modal-dialog\" role=\"document\">\n//                   <form class=\"form-horizontal\">\n//                       <div class=\"col-xs-8 col-xs-offset-4\">\n//                           <h2>Create Channel</h2>\n//                       </div>\t\t\n//                       <div class=\"form-group\">\n//                           <label class=\"control-label col-xs-4\">Channel Name</label>\n//                           <div class=\"col-xs-8\">\n//                               <input type=\"text\" class=\"form-control\" name=\"channel_name\" required=\"required\" value ={name} onChange={e => {setChannelName(e.target.value)}}/>\n//                           </div>        \t\n//                       </div>\n//                       <div class=\"form-group\">\n//                           <label class=\"control-label col-xs-4\">Description</label>\n//                           <div class=\"col-xs-8\">\n//                               <input type=\"text\" class=\"form-control\" name=\"channel_description\" value ={description} onChange={e => {setDescription(e.target.value)}}\n//                               />\n//                           </div>        \t\n//                       </div>\n//                       <div class=\"form-group\">\n//                           <label class=\"control-label col-xs-4\" for=\"defaultChecked\">Public</label>\n//                           <div class=\"col-xs-8\">\n//                             <input type=\"radio\" class=\"custom-control-input\" id=\"defaultChecked\" value = \"public\" name=\"defaultExampleRadios\" onClick={e => {setChannelType(e.target.value)}} checked/>\n//                           </div>\n//                       </div>\n//                       <div class=\"form-group\">\n//                           <label class=\"control-label col-xs-4\" for=\"defaultUnchecked\">Private</label>\n//                           <div class=\"col-xs-8\">\n//                             <input type=\"radio\" class=\"custom-control-input\" id=\"defaultUnchecked\" value = \"private\" name=\"defaultExampleRadios\" onClick={e => {setChannelType(e.target.value)}}/>\n//                           </div>\n//                       </div>\n//                       <div id =\"update-response\" class=\"text-center\">\n//                           {/* <p style={{color: this.state.color}}>{this.state.message}</p> */}\n//                       </div>\n//                       <div class=\"form-group\">\n//                           <div class=\"col-xs-8 col-xs-offset-4\">\n//                               <button class=\"btn btn-primary btn-sm\" onClick={e => postChannels(e)}>Create</button>\n//                           </div>  \n//                           <div class=\"col-xs-8 col-xs-offset-4\">\n//                           <button type=\"button\" class=\"btn btn-primary btn-sm\" data-dismiss=\"modal\"\n//                           >\n//                               Cancel</button>\n//                       </div> \n//                       </div>\t\n//                   </form>\n//               </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n// }\n\nexport default class ConversationList extends Component {\n  // const [conversations, setConversations] = useState([]);\n  // const authentication = useContext(AuthContext);\n  // const [name, setChannelName] = useState(\"\");\n  // const [description, setDescription] = useState(\"\")\n  // const [channelType, setChannelType] = useState(\"public\")\n  // useEffect(() => {\n  constructor(props) {\n    super(props);\n\n    this.postChannels = e => {\n      const {\n        auth\n      } = this.context;\n      e.preventDefault();\n      Axios({\n        method: 'POST',\n        url: \"https://localhost:4000/v1/channels\",\n        headers: {\n          Authorization: auth.token\n        },\n        data: {\n          name: name,\n          description: description,\n          private: channelType == \"private\"\n        }\n      }).then(result => {\n        if (result.status == 200) {\n          window.location.reload(false);\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.state = {\n      conversations: [],\n      currentChannel: this.props.currentChannel\n    };\n  }\n\n  componentDidMount() {\n    const {\n      auth\n    } = this.context;\n    axios.get('https://localhost:4000/v1/channels', {\n      headers: {\n        \"Authorization\": auth.token\n      }\n    }).then(response => {\n      let channels = response.data.map(results => {\n        return {\n          name: results.name,\n          description: results.description,\n          channelID: results.id\n        };\n      });\n      this.setState({\n        conversations: channels\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"conversation-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      title: \"Channels\",\n      leftItems: [/*#__PURE__*/React.createElement(ToolbarButton, {\n        key: \"cog\",\n        icon: \"ion-ios-cog\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }\n      })],\n      rightItems: [\n      /*#__PURE__*/\n      // <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n      React.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"30\",\n        height: \"30\",\n        viewBox: \"0 0 8 8\",\n        \"data-toggle\": \"modal\",\n        \"data-target\": \"#channelModal\",\n        \"data-whatever\": \"@mdo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M3 0v3h-3v2h3v3h2v-3h3v-2h-3v-3h-2z\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }\n      }))],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ConversationSearch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }\n    }), this.conversations.map(conversation => /*#__PURE__*/React.createElement(ConversationListItem, {\n      key: conversation.name,\n      data: conversation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"signup-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"channelModal\",\n      tabindex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"exampleModalLabel\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      role: \"document\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      class: \"form-horizontal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-xs-8 col-xs-offset-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 27\n      }\n    }, \"Create Channel\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"control-label col-xs-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 27\n      }\n    }, \"Channel Name\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-xs-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"channel_name\",\n      required: \"required\",\n      value: name,\n      onChange: e => {\n        this.setChannelName(e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 31\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"control-label col-xs-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 27\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-xs-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"channel_description\",\n      value: description,\n      onChange: e => {\n        this.setDescription(e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 31\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"control-label col-xs-4\",\n      for: \"defaultChecked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 27\n      }\n    }, \"Public\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-xs-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      class: \"custom-control-input\",\n      id: \"defaultChecked\",\n      value: \"public\",\n      name: \"defaultExampleRadios\",\n      onClick: e => {\n        this.setChannelType(e.target.value);\n      },\n      checked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"control-label col-xs-4\",\n      for: \"defaultUnchecked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 27\n      }\n    }, \"Private\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-xs-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      class: \"custom-control-input\",\n      id: \"defaultUnchecked\",\n      value: \"private\",\n      name: \"defaultExampleRadios\",\n      onClick: e => {\n        this.setChannelType(e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"update-response\",\n      class: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-xs-8 col-xs-offset-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn btn-primary btn-sm\",\n      onClick: e => this.postChannels(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 31\n      }\n    }, \"Create\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-xs-8 col-xs-offset-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary btn-sm\",\n      \"data-dismiss\": \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 27\n      }\n    }, \"Cancel\"))))))));\n  }\n\n}\nConversationList.contextType = AuthContext;","map":{"version":3,"sources":["/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/components/ConversationList/index.js"],"names":["React","useState","useEffect","useContext","useRef","Component","ConversationSearch","ConversationListItem","MessageList","Toolbar","ToolbarButton","axios","AuthContext","Axios","ConversationList","constructor","props","postChannels","e","auth","context","preventDefault","method","url","headers","Authorization","token","data","name","description","private","channelType","then","result","status","window","location","reload","catch","console","log","state","conversations","currentChannel","componentDidMount","get","response","channels","map","results","channelID","id","setState","render","conversation","setChannelName","target","value","setDescription","setChannelType","contextType"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext, useRef, Component} from 'react';\nimport ConversationSearch from '../ConversationSearch';\nimport ConversationListItem from '../ConversationListItem';\nimport MessageList from '../MessageList';\n\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport axios from 'axios';\nimport AuthContext from \"../../context/AuthContext\"\nimport './ConversationList.css';\nimport Axios from 'axios';\n\n// export default function ConversationList(props) {\n//   const [conversations, setConversations] = useState([]);\n//   const authentication = useContext(AuthContext);\n//   const [name, setChannelName] = useState(\"\");\n//   const [description, setDescription] = useState(\"\")\n//   const [channelType, setChannelType] = useState(\"public\")\n//   useEffect(() => {\n//     getChannels()\n//   },[])\n\n//  const getChannels = () => {\n//     axios.get('https://localhost:4000/v1/channels', \n//     {\n//       headers: {\n//         \"Authorization\": authentication.auth.token\n//       }\n//     }\n//     ).then(response => {\n//         let channels = response.data.map(results => {\n//           return {\n//             name: results.name,\n//             description: results.description,\n//             channelID: results.id\n//           }\n//         })\n//         setConversations([...conversations, ...channels])\n//     });\n//   }\n\n//   function postChannels(e) {\n//     e.preventDefault();\n//     Axios({\n//       method: 'POST', \n//       url: \"https://localhost:4000/v1/channels\",\n//       headers: {\n//           Authorization: authentication.auth.token\n//       },\n//       data: {\n//           name: name,\n//           description: description,\n//           private: channelType == \"private\"\n//       }\n//     }).then(result => {\n//         if (result.status == 200) {\n//           window.location.reload(false);\n//         }\n//     }).catch(e => {\n//         console.log(e);\n//     })\n//    } \n\n//     return (\n//       <div className=\"conversation-list\">\n//         <Toolbar\n//           title=\"Channels\"\n//           leftItems={[\n//             <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n//           ]}\n//           rightItems={[\n//             // <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n//             <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 8 8\"data-toggle=\"modal\" data-target=\"#channelModal\" data-whatever=\"@mdo\" >\n//               <path d=\"M3 0v3h-3v2h3v3h2v-3h3v-2h-3v-3h-2z\" />\n//             </svg>\n//           ]}\n//         />\n//         <ConversationSearch />\n//         {\n//           conversations.map(conversation =>\n//             <ConversationListItem\n//               key={conversation.name}\n//               data={conversation}\n//             />\n//           )\n//         }\n//         <div class=\"signup-form\">\n//           <div class=\"modal fade\" id=\"channelModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n//               <div class=\"modal-dialog\" role=\"document\">\n//                   <form class=\"form-horizontal\">\n//                       <div class=\"col-xs-8 col-xs-offset-4\">\n//                           <h2>Create Channel</h2>\n//                       </div>\t\t\n//                       <div class=\"form-group\">\n//                           <label class=\"control-label col-xs-4\">Channel Name</label>\n//                           <div class=\"col-xs-8\">\n//                               <input type=\"text\" class=\"form-control\" name=\"channel_name\" required=\"required\" value ={name} onChange={e => {setChannelName(e.target.value)}}/>\n//                           </div>        \t\n//                       </div>\n//                       <div class=\"form-group\">\n//                           <label class=\"control-label col-xs-4\">Description</label>\n//                           <div class=\"col-xs-8\">\n//                               <input type=\"text\" class=\"form-control\" name=\"channel_description\" value ={description} onChange={e => {setDescription(e.target.value)}}\n//                               />\n//                           </div>        \t\n//                       </div>\n//                       <div class=\"form-group\">\n//                           <label class=\"control-label col-xs-4\" for=\"defaultChecked\">Public</label>\n//                           <div class=\"col-xs-8\">\n//                             <input type=\"radio\" class=\"custom-control-input\" id=\"defaultChecked\" value = \"public\" name=\"defaultExampleRadios\" onClick={e => {setChannelType(e.target.value)}} checked/>\n//                           </div>\n//                       </div>\n//                       <div class=\"form-group\">\n//                           <label class=\"control-label col-xs-4\" for=\"defaultUnchecked\">Private</label>\n//                           <div class=\"col-xs-8\">\n//                             <input type=\"radio\" class=\"custom-control-input\" id=\"defaultUnchecked\" value = \"private\" name=\"defaultExampleRadios\" onClick={e => {setChannelType(e.target.value)}}/>\n//                           </div>\n//                       </div>\n//                       <div id =\"update-response\" class=\"text-center\">\n//                           {/* <p style={{color: this.state.color}}>{this.state.message}</p> */}\n//                       </div>\n//                       <div class=\"form-group\">\n//                           <div class=\"col-xs-8 col-xs-offset-4\">\n//                               <button class=\"btn btn-primary btn-sm\" onClick={e => postChannels(e)}>Create</button>\n//                           </div>  \n//                           <div class=\"col-xs-8 col-xs-offset-4\">\n//                           <button type=\"button\" class=\"btn btn-primary btn-sm\" data-dismiss=\"modal\"\n//                           >\n//                               Cancel</button>\n//                       </div> \n//                       </div>\t\n//                   </form>\n//               </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n// }\nexport default class ConversationList extends Component {\n  // const [conversations, setConversations] = useState([]);\n  // const authentication = useContext(AuthContext);\n  // const [name, setChannelName] = useState(\"\");\n  // const [description, setDescription] = useState(\"\")\n  // const [channelType, setChannelType] = useState(\"public\")\n  // useEffect(() => {\n    static contextType = AuthContext\n    constructor(props) {\n      super(props);\n      this.state = {\n        conversations: [],\n        currentChannel: this.props.currentChannel\n      }\n    }\n\n    componentDidMount() {\n      const {auth} = this.context\n      axios.get('https://localhost:4000/v1/channels', \n      {\n        headers: {\n          \"Authorization\": auth.token\n        }\n      }\n      ).then(response => {\n          let channels = response.data.map(results => {\n            return {\n              name: results.name,\n              description: results.description,\n              channelID: results.id\n            }\n          })\n          this.setState({conversations: channels});\n      });\n    }\n\n  postChannels = (e) => {\n    const {auth} = this.context\n    e.preventDefault();\n    Axios({\n      method: 'POST', \n      url: \"https://localhost:4000/v1/channels\",\n      headers: {\n          Authorization: auth.token\n      },\n      data: {\n          name: name,\n          description: description,\n          private: channelType == \"private\"\n      }\n    }).then(result => {\n        if (result.status == 200) {\n          window.location.reload(false);\n        }\n    }).catch(e => {\n        console.log(e);\n    })\n   } \n   render() {\n    return (\n      <div className=\"conversation-list\">\n        <Toolbar\n          title=\"Channels\"\n          leftItems={[\n            <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n          ]}\n          rightItems={[\n            // <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 8 8\"data-toggle=\"modal\" data-target=\"#channelModal\" data-whatever=\"@mdo\" >\n              <path d=\"M3 0v3h-3v2h3v3h2v-3h3v-2h-3v-3h-2z\" />\n            </svg>\n          ]}\n        />\n        <ConversationSearch />\n        {\n          this.conversations.map(conversation =>\n            <ConversationListItem\n              key={conversation.name}\n              data={conversation}\n            />\n          )\n        }\n        <div class=\"signup-form\">\n          <div class=\"modal fade\" id=\"channelModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n              <div class=\"modal-dialog\" role=\"document\">\n                  <form class=\"form-horizontal\">\n                      <div class=\"col-xs-8 col-xs-offset-4\">\n                          <h2>Create Channel</h2>\n                      </div>\t\t\n                      <div class=\"form-group\">\n                          <label class=\"control-label col-xs-4\">Channel Name</label>\n                          <div class=\"col-xs-8\">\n                              <input type=\"text\" class=\"form-control\" name=\"channel_name\" required=\"required\" value ={name} onChange={e => {this.setChannelName(e.target.value)}}/>\n                          </div>        \t\n                      </div>\n                      <div class=\"form-group\">\n                          <label class=\"control-label col-xs-4\">Description</label>\n                          <div class=\"col-xs-8\">\n                              <input type=\"text\" class=\"form-control\" name=\"channel_description\" value ={description} onChange={e => {this.setDescription(e.target.value)}}\n                              />\n                          </div>        \t\n                      </div>\n                      <div class=\"form-group\">\n                          <label class=\"control-label col-xs-4\" for=\"defaultChecked\">Public</label>\n                          <div class=\"col-xs-8\">\n                            <input type=\"radio\" class=\"custom-control-input\" id=\"defaultChecked\" value = \"public\" name=\"defaultExampleRadios\" onClick={e => {this.setChannelType(e.target.value)}} checked/>\n                          </div>\n                      </div>\n                      <div class=\"form-group\">\n                          <label class=\"control-label col-xs-4\" for=\"defaultUnchecked\">Private</label>\n                          <div class=\"col-xs-8\">\n                            <input type=\"radio\" class=\"custom-control-input\" id=\"defaultUnchecked\" value = \"private\" name=\"defaultExampleRadios\" onClick={e => {this.setChannelType(e.target.value)}}/>\n                          </div>\n                      </div>\n                      <div id =\"update-response\" class=\"text-center\">\n                          {/* <p style={{color: this.state.color}}>{this.state.message}</p> */}\n                      </div>\n                      <div class=\"form-group\">\n                          <div class=\"col-xs-8 col-xs-offset-4\">\n                              <button class=\"btn btn-primary btn-sm\" onClick={e => this.postChannels(e)}>Create</button>\n                          </div>  \n                          <div class=\"col-xs-8 col-xs-offset-4\">\n                          <button type=\"button\" class=\"btn btn-primary btn-sm\" data-dismiss=\"modal\"\n                          >\n                              Cancel</button>\n                      </div> \n                      </div>\t\n                  </form>\n              </div>\n          </div>\n        </div>\n      </div>\n    );\n   }\n}"]},"metadata":{},"sourceType":"module"}