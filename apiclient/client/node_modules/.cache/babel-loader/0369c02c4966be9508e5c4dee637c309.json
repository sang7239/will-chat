{"ast":null,"code":"var _jsxFileName = \"/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/pages/Login.js\";\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios'; // import logoImg from \"../img/logo.jpg\";\n\nimport { Card, Logo, Form, Input, Button, Error } from \"../components/AuthForm\";\nimport { useAuth } from \"../context/auth\";\n\nfunction Login(props) {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    setAuthTokens\n  } = useAuth();\n\n  function postLogin() {\n    axios.post(\"https://www.somePlace.com/auth/login\", {\n      userName,\n      password\n    }).then(result => {\n      if (result.status == 200) {\n        setAuthTokens(result.data);\n        setLoggedIn(true);\n      }\n    }).catch(e => {\n      setIsError(true);\n    });\n  }\n\n  const referer = props.location.state.referer || '/';\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: referer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"username\",\n    value: userName,\n    onChange: e => {\n      setUserName(e.target.value);\n    },\n    placeholder: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    value: password,\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    placeholder: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: postLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Sign In\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Don't have an account?\"), isError && /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, \"The username or password provided were incorrect!\"));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/pages/Login.js"],"names":["React","useState","Link","Redirect","axios","Card","Logo","Form","Input","Button","Error","useAuth","Login","props","isLoggedIn","setLoggedIn","isError","setIsError","userName","setUserName","password","setPassword","setAuthTokens","postLogin","post","then","result","status","data","catch","e","referer","location","state","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,kBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAAQC,IAAR,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,MAAjC,EAAyCC,KAAzC,QAAqD,wBAArD;AACA,SAAQC,OAAR,QAAsB,iBAAtB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAACqB,IAAAA;AAAD,MAAkBX,OAAO,EAA/B;;AAEA,WAASY,SAAT,GAAqB;AACjBnB,IAAAA,KAAK,CAACoB,IAAN,CAAW,sCAAX,EAAoD;AAChDN,MAAAA,QADgD;AAEhDE,MAAAA;AAFgD,KAApD,EAGGK,IAHH,CAGQC,MAAM,IAAI;AACd,UAAIA,MAAM,CAACC,MAAP,IAAiB,GAArB,EAA0B;AACtBL,QAAAA,aAAa,CAACI,MAAM,CAACE,IAAR,CAAb;AACAb,QAAAA,WAAW,CAAC,IAAD,CAAX;AACH;AACJ,KARD,EAQGc,KARH,CAQSC,CAAC,IAAI;AACVb,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAVD;AAWH;;AACD,QAAMc,OAAO,GAAGlB,KAAK,CAACmB,QAAN,CAAeC,KAAf,CAAqBF,OAArB,IAAgC,GAAhD;;AACA,MAAIjB,UAAJ,EAAgB;AACZ,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAEiB,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,KAAK,EAAIb,QAFb;AAGI,IAAA,QAAQ,EAAIY,CAAC,IAAI;AACbX,MAAAA,WAAW,CAACW,CAAC,CAACI,MAAF,CAASC,KAAV,CAAX;AACH,KALL;AAMI,IAAA,WAAW,EAAC,OANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,KAAK,EAAEf,QAFX;AAGI,IAAA,QAAQ,EAAEU,CAAC,IAAI;AACXT,MAAAA,WAAW,CAACS,CAAC,CAACI,MAAF,CAASC,KAAV,CAAX;AACH,KALL;AAMI,IAAA,WAAW,EAAC,UANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAgBI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEZ,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhBJ,CAFJ,eAoBI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BApBJ,EAqBKP,OAAO,iBAAI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDArBhB,CADJ;AAyBH;;AACD,eAAeJ,KAAf","sourcesContent":["import React, {useState} from \"react\";\nimport {Link, Redirect} from 'react-router-dom';\nimport axios from 'axios';\n// import logoImg from \"../img/logo.jpg\";\nimport {Card, Logo, Form, Input, Button, Error} from \"../components/AuthForm\";\nimport {useAuth} from \"../context/auth\";\n\nfunction Login(props) {\n    const [isLoggedIn, setLoggedIn] = useState(false);\n    const [isError, setIsError] = useState(false);\n    const [userName, setUserName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const {setAuthTokens} = useAuth();\n\n    function postLogin() {\n        axios.post(\"https://www.somePlace.com/auth/login\",  {\n            userName,\n            password\n        }).then(result => {\n            if (result.status == 200) {\n                setAuthTokens(result.data);\n                setLoggedIn(true);\n            }\n        }).catch(e => {\n            setIsError(true);\n        })\n    }\n    const referer = props.location.state.referer || '/';\n    if (isLoggedIn) {\n        return <Redirect to={referer} />\n    }\n    return (\n        <Card>\n            {/* <Logo src={logoImg} /> */}\n            <Form>\n                <Input \n                    type=\"username\" \n                    value = {userName}\n                    onChange = {e => {\n                        setUserName(e.target.value);\n                    }}\n                    placeholder=\"email\"/>\n                <Input \n                    type=\"password\" \n                    value={password}\n                    onChange={e => {\n                        setPassword(e.target.value);\n                    }}\n                    placeholder=\"password\"\n                     />\n                <Button onClick={postLogin}>Sign In</Button>\n            </Form>\n            <Link to=\"/signup\">Don't have an account?</Link>\n            {isError && <Error>The username or password provided were incorrect!</Error>}\n        </Card>\n    )\n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}