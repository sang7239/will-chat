{"ast":null,"code":"var _jsxFileName = \"/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/components/MessageList/index.js\";\nimport React, { useEffect, useState, useContext, Component } from 'react';\nimport Compose from '../Compose';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport Message from '../Message';\nimport moment from 'moment';\nimport ChannelContext from '../../context/ChannelContext';\nimport './MessageList.css';\nimport axios from 'axios';\nimport AuthContext from '../../context/AuthContext';\nexport default class MessageList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderMessages = messages => {\n      console.log(messages);\n      let MY_USER_ID = 'apple';\n      let i = 0;\n      let messageCount = messages.length;\n      let tempMessages = [];\n\n      while (i < messageCount) {\n        let previous = messages[i - 1];\n        let current = messages[i];\n        let next = messages[i + 1];\n        let isMine = current.author === MY_USER_ID;\n        let currentMoment = moment(current.timestamp);\n        let prevBySameAuthor = false;\n        let nextBySameAuthor = false;\n        let startsSequence = true;\n        let endsSequence = true;\n        let showTimestamp = true;\n\n        if (previous) {\n          let previousMoment = moment(previous.timestamp);\n          let previousDuration = moment.duration(currentMoment.diff(previousMoment));\n          prevBySameAuthor = previous.author === current.author;\n\n          if (prevBySameAuthor && previousDuration.as('hours') < 1) {\n            startsSequence = false;\n          }\n\n          if (previousDuration.as('hours') < 1) {\n            showTimestamp = false;\n          }\n        }\n\n        if (next) {\n          let nextMoment = moment(next.timestamp);\n          let nextDuration = moment.duration(nextMoment.diff(currentMoment));\n          nextBySameAuthor = next.author === current.author;\n\n          if (nextBySameAuthor && nextDuration.as('hours') < 1) {\n            endsSequence = false;\n          }\n        }\n\n        tempMessages.push( /*#__PURE__*/React.createElement(Message, {\n          key: i,\n          isMine: isMine,\n          startsSequence: startsSequence,\n          endsSequence: endsSequence,\n          showTimestamp: showTimestamp,\n          data: current,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 9\n          }\n        })); // Proceed to the next message.\n\n        i += 1;\n      }\n\n      return tempMessages;\n    };\n\n    this.state = {\n      currentChannel: this.props.currentChannel,\n      messages: []\n    };\n  }\n\n  componentDidMount() {\n    const auth = this.context;\n  }\n\n  componentWillReceiveProps(newProps) {\n    const {\n      auth\n    } = this.context;\n    axios.get('https://localhost:4000/v1/channels/' + newProps.currentChannel, {\n      headers: {\n        \"Authorization\": auth.token\n      }\n    }).then(response => {\n      let msgs = response.data.map(results => {\n        return {\n          author: 'apple',\n          message: results.body,\n          timestamp: results.createdAt\n        };\n      });\n      this.setState({\n        messages: msgs\n      });\n    });\n    this.setState({\n      currentChannel: newProps.currentChannel\n    });\n  }\n\n  componentWillUpdate() {\n    const {\n      auth\n    } = this.context;\n    axios.get('https://localhost:4000/v1/channels/' + this.state.currentChannel, {\n      headers: {\n        \"Authorization\": auth.token\n      }\n    }).then(response => {\n      let msgs = response.data.map(results => {\n        return {\n          author: 'apple',\n          message: results.body,\n          timestamp: results.createdAt\n        };\n      });\n      this.setState({\n        messages: msgs\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      title: \"Conversation Title\",\n      rightItems: [/*#__PURE__*/React.createElement(ToolbarButton, {\n        key: \"info\",\n        icon: \"ion-ios-information-circle-outline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(ToolbarButton, {\n        key: \"video\",\n        icon: \"ion-ios-videocam\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(ToolbarButton, {\n        key: \"phone\",\n        icon: \"ion-ios-call\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Compose, {\n      currentChannel: this.state.currentChannel,\n      update: this.update,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-list-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, this.renderMessages(this.state.messages)));\n  }\n\n}\nMessageList.contextType = AuthContext;","map":{"version":3,"sources":["/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/components/MessageList/index.js"],"names":["React","useEffect","useState","useContext","Component","Compose","Toolbar","ToolbarButton","Message","moment","ChannelContext","axios","AuthContext","MessageList","constructor","props","renderMessages","messages","console","log","MY_USER_ID","i","messageCount","length","tempMessages","previous","current","next","isMine","author","currentMoment","timestamp","prevBySameAuthor","nextBySameAuthor","startsSequence","endsSequence","showTimestamp","previousMoment","previousDuration","duration","diff","as","nextMoment","nextDuration","push","state","currentChannel","componentDidMount","auth","context","componentWillReceiveProps","newProps","get","headers","token","then","response","msgs","data","map","results","message","body","createdAt","setState","componentWillUpdate","render","update","contextType"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useContext, Component} from 'react';\nimport Compose from '../Compose';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport Message from '../Message';\nimport moment from 'moment';\nimport ChannelContext from '../../context/ChannelContext'\nimport './MessageList.css';\nimport axios from 'axios';\nimport AuthContext from '../../context/AuthContext';\n\nexport default class MessageList extends Component {\n  static contextType = AuthContext\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentChannel: this.props.currentChannel,\n      messages: []\n    }\n  }\n  componentDidMount() {\n    const auth = this.context;\n  }\n  componentWillReceiveProps(newProps) {\n    const {auth} = this.context\n    axios.get('https://localhost:4000/v1/channels/'+ newProps.currentChannel, \n    {\n      headers: {\n        \"Authorization\": auth.token\n      }\n    }\n    ).then(response => {\n        let msgs = response.data.map(results => {\n          return {\n            author: 'apple',\n            message: results.body,\n            timestamp: results.createdAt,\n          }\n        })\n        this.setState({messages: msgs});\n    });\n    this.setState({currentChannel: newProps.currentChannel});\n  }\n\n  componentWillUpdate() {\n    const {auth} = this.context\n    axios.get('https://localhost:4000/v1/channels/'+ this.state.currentChannel, \n    {\n      headers: {\n        \"Authorization\": auth.token\n      }\n    }\n    ).then(response => {\n        let msgs = response.data.map(results => {\n          return {\n            author: 'apple',\n            message: results.body,\n            timestamp: results.createdAt,\n          }\n        })\n        this.setState({messages: msgs});\n      });\n  }\n  renderMessages = (messages) => {\n    console.log(messages);\n    let MY_USER_ID = 'apple';\n    let i = 0;\n    let messageCount = messages.length;\n    let tempMessages = [];\n\n    while (i < messageCount) {\n      let previous = messages[i - 1];\n      let current = messages[i];\n      let next = messages[i + 1];\n      let isMine = current.author === MY_USER_ID;\n      let currentMoment = moment(current.timestamp);\n      let prevBySameAuthor = false;\n      let nextBySameAuthor = false;\n      let startsSequence = true;\n      let endsSequence = true;\n      let showTimestamp = true;\n\n      if (previous) {\n        let previousMoment = moment(previous.timestamp);\n        let previousDuration = moment.duration(currentMoment.diff(previousMoment));\n        prevBySameAuthor = previous.author === current.author;\n        \n        if (prevBySameAuthor && previousDuration.as('hours') < 1) {\n          startsSequence = false;\n        }\n\n        if (previousDuration.as('hours') < 1) {\n          showTimestamp = false;\n        }\n      }\n\n      if (next) {\n        let nextMoment = moment(next.timestamp);\n        let nextDuration = moment.duration(nextMoment.diff(currentMoment));\n        nextBySameAuthor = next.author === current.author;\n\n        if (nextBySameAuthor && nextDuration.as('hours') < 1) {\n          endsSequence = false;\n        }\n      }\n\n      tempMessages.push(\n        <Message\n          key={i}\n          isMine={isMine}\n          startsSequence={startsSequence}\n          endsSequence={endsSequence}\n          showTimestamp={showTimestamp}\n          data={current}\n        />\n      );\n\n      // Proceed to the next message.\n      i += 1;\n    }\n    return tempMessages;\n  }\n  render() {\n    return(\n      <div className=\"message-list\">\n        <Toolbar\n          title=\"Conversation Title\"\n          rightItems={[\n            <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n            <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n            <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n          ]}\n        />\n        <Compose currentChannel={this.state.currentChannel} update={this.update}/>\n        <div className=\"message-list-container\">{\n          this.renderMessages(this.state.messages)\n        }</div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}