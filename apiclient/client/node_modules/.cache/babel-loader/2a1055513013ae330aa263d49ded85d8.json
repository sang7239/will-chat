{"ast":null,"code":"var _jsxFileName = \"/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/context/ChannelContext.js\";\nimport React, { Component } from 'react';\nconst ChannelContext = React.createContext();\n\nclass ChannelProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      auth: {\n        token: localStorage.getItem(\"token\"),\n        isLoggedIn: localStorage.getItem(\"token\") != null\n      }\n    };\n\n    this.setChannel = auth => {\n      this.setState(prevState => ({\n        auth\n      }));\n      localStorage.setItem(\"token\", auth.token);\n    };\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    const {\n      auth\n    } = this.state;\n    const {\n      setChannel\n    } = this;\n    return /*#__PURE__*/React.createElement(ChannelContext.Provider, {\n      value: {\n        auth,\n        setChannel\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, children);\n  }\n\n}\n\nexport default ChannelContext;\nexport { ChannelProvider };","map":{"version":3,"sources":["/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/context/ChannelContext.js"],"names":["React","Component","ChannelContext","createContext","ChannelProvider","state","auth","token","localStorage","getItem","isLoggedIn","setChannel","setState","prevState","setItem","render","children","props"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,MAAMC,cAAc,GAAGF,KAAK,CAACG,aAAN,EAAvB;;AAEA,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAElCI,KAFkC,GAE1B;AACNC,MAAAA,IAAI,EAAE;AAACC,QAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAR;AAAuCC,QAAAA,UAAU,EAAEF,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC;AAApF;AADA,KAF0B;;AAAA,SAOpCE,UAPoC,GAOtBL,IAAD,IAAU;AACrB,WAAKM,QAAL,CAAeC,SAAD,KAAgB;AAAEP,QAAAA;AAAF,OAAhB,CAAd;AACAE,MAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BR,IAAI,CAACC,KAAnC;AACD,KAVmC;AAAA;;AAYpCQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,UAAM;AAAEX,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAiB,IAAvB;AACA,wBACE,oBAAC,cAAD,CAAgB,QAAhB;AACE,MAAA,KAAK,EAAE;AACLL,QAAAA,IADK;AAELK,QAAAA;AAFK,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGK,QANH,CADF;AAUD;;AA1BmC;;AA6BtC,eAAed,cAAf;AAEA,SAASE,eAAT","sourcesContent":["import React, {Component} from 'react'\n\nconst ChannelContext = React.createContext()\n\nclass ChannelProvider extends Component {\n    // Context state\n      state = {\n        auth: {token: localStorage.getItem(\"token\"), isLoggedIn: localStorage.getItem(\"token\") != null}\n      }\n  \n    // Method to update state\n    setChannel = (auth) => {\n      this.setState((prevState) => ({ auth }))\n      localStorage.setItem(\"token\", auth.token);\n    }\n    \n    render() {\n      const { children } = this.props\n      const { auth } = this.state\n      const { setChannel } = this\n      return (\n        <ChannelContext.Provider\n          value={{\n            auth,\n            setChannel,\n          }}\n        >\n          {children}\n        </ChannelContext.Provider>\n      )\n    }\n  }\n  \n  export default ChannelContext\n  \n  export { ChannelProvider }"]},"metadata":{},"sourceType":"module"}