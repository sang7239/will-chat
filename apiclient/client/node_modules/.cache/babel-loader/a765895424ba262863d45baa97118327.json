{"ast":null,"code":"var _jsxFileName = \"/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/components/ConversationListItem/index.js\";\nimport React, { useState, useEffect, useContext, Component } from 'react';\nimport shave from 'shave';\nimport './ConversationListItem.css';\nimport MessageList from '../MessageList';\nimport ChannelContext from '../../context/ChannelContext';\nimport axios from 'axios';\nimport AuthContext from '../../context/AuthContext';\nexport default function ConversationListItem(props) {\n  useEffect(() => {\n    shave('.conversation-snippet', 20);\n  });\n  const [messages, setMessages] = useState([]);\n  const {\n    name,\n    description,\n    channelID\n  } = props.data;\n  const {\n    setChannel\n  } = useContext(ChannelContext);\n\n  function displayMessages(e) {\n    console.log(props.data);\n    console.log(channelID);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-list-item\",\n    onClick: this.props.updateCurrentChannel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"conversation-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"conversation-snippet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, description))));\n}","map":{"version":3,"sources":["/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/components/ConversationListItem/index.js"],"names":["React","useState","useEffect","useContext","Component","shave","MessageList","ChannelContext","axios","AuthContext","ConversationListItem","props","messages","setMessages","name","description","channelID","data","setChannel","displayMessages","e","console","log","updateCurrentChannel"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,EAAgDC,SAAhD,QAAgE,OAAhE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,4BAAP;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,eAAe,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAClDT,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CAAC,uBAAD,EAA0B,EAA1B,CAAL;AACD,GAFQ,CAAT;AAGA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAEa,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA;AAArB,MAAmCL,KAAK,CAACM,IAA/C;AACA,QAAM;AAACC,IAAAA;AAAD,MAAef,UAAU,CAACI,cAAD,CAA/B;;AACA,WAASY,eAAT,CAAyBC,CAAzB,EAA4B;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACM,IAAlB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAwC,IAAA,OAAO,EAAE,KAAKL,KAAL,CAAWY,oBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCT,IAArC,CADF,eAEE;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCC,WAAtC,CAFF,CADF,CADF,CADF;AAUD","sourcesContent":["import React, {useState, useEffect, useContext, Component} from 'react';\nimport shave from 'shave';\n\nimport './ConversationListItem.css';\nimport MessageList from '../MessageList';\nimport ChannelContext from '../../context/ChannelContext'\nimport axios from 'axios';\nimport AuthContext from '../../context/AuthContext';\n\nexport default function ConversationListItem(props) {\n  useEffect(() => {\n    shave('.conversation-snippet', 20);\n  })\n  const [messages, setMessages] = useState([])\n  const { name, description, channelID } = props.data;\n  const {setChannel} = useContext(ChannelContext)\n  function displayMessages(e) {\n    console.log(props.data)\n    console.log(channelID);\n  }\n  return (\n    <div>\n      <div className=\"conversation-list-item\" onClick={this.props.updateCurrentChannel}>\n        <div className=\"conversation-info\">\n          <h1 className=\"conversation-title\">{ name }</h1>\n          <p className=\"conversation-snippet\">{ description }</p>\n        </div>\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}