{"ast":null,"code":"var _jsxFileName = \"/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/components/Compose/index.js\";\nimport React, { useState, useRef, useContext, Component } from 'react';\nimport './Compose.css';\nimport Axios from 'axios';\nimport ChannelContext from '../../context/ChannelContext';\nimport AuthContext from '../../context/AuthContext'; // export default function Compose(props) {\n//     const authentication = useContext(AuthContext);\n//     const channel = useContext(ChannelContext)\n//     const textInput = useRef(null)\n//     function handleSubmit(e) {\n//       e.preventDefault();\n//       if (e.keyCode == 13) {\n//         Axios({\n//           method: 'POST', \n//           url: \"https://localhost:4000/v1/messages\",\n//           headers: {\n//               Authorization: authentication.auth.token\n//           },\n//           data: {\n//               channelId: channel.channel.id,\n//               body: textInput.current.value\n//           }\n//         }).then(result => {\n//             if (result.status == 200) {\n//               // window.location.reload(false);\n//               console.log(result)\n//             }\n//         }).catch(e => {\n//             console.log(e);\n//         })\n//         textInput.current.value = \"\"   \n//        } \n//     }\n//     return (\n//       <div className=\"compose\">\n//           <input\n//             type=\"text\"\n//             ref={textInput}\n//             className=\"compose-input\"\n//             placeholder=\"Type a message\"\n//             // onInput={e => setInput(e.target.value)}\n//             onKeyUp={e => handleSubmit(e)}\n//           />\n//       </div>\n//     );\n// }\n\nexport default class Compose extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(this.state.currentChannel);\n      const {\n        auth\n      } = this.context;\n\n      if (e.keyCode == 13) {\n        Axios({\n          method: 'POST',\n          url: \"https://localhost:4000/v1/messages\",\n          headers: {\n            Authorization: auth.token\n          },\n          data: {\n            channelId: this.state.currentChannel,\n            body: this.message.value\n          }\n        }).then(result => {\n          if (result.status == 200) {\n            // window.location.reload(false);\n            console.log(result);\n          }\n        }).catch(e => {\n          console.log(e);\n        });\n        this.message.value = \"\";\n      }\n    };\n\n    this.state = {\n      currentChannel: this.props.currentChannel\n    };\n  }\n\n  componentDidMount() {\n    const auth = this.context;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"compose\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      ref: node => this.message = node,\n      className: \"compose-input\",\n      placeholder: \"Type a message\",\n      onKeyUp: e => this.handleSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\nCompose.contextType = AuthContext;","map":{"version":3,"sources":["/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/components/Compose/index.js"],"names":["React","useState","useRef","useContext","Component","Axios","ChannelContext","AuthContext","Compose","constructor","props","handleSubmit","e","preventDefault","console","log","state","currentChannel","auth","context","keyCode","method","url","headers","Authorization","token","data","channelId","body","message","value","then","result","status","catch","componentDidMount","render","node","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,UAAjC,EAA6CC,SAA7C,QAA6D,OAA7D;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAE7CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,YATmB,GASHC,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,cAAvB;AACA,YAAM;AAACC,QAAAA;AAAD,UAAS,KAAKC,OAApB;;AACA,UAAIP,CAAC,CAACQ,OAAF,IAAa,EAAjB,EAAqB;AACnBf,QAAAA,KAAK,CAAC;AACJgB,UAAAA,MAAM,EAAE,MADJ;AAEJC,UAAAA,GAAG,EAAE,oCAFD;AAGJC,UAAAA,OAAO,EAAE;AACLC,YAAAA,aAAa,EAAEN,IAAI,CAACO;AADf,WAHL;AAMJC,UAAAA,IAAI,EAAE;AACFC,YAAAA,SAAS,EAAE,KAAKX,KAAL,CAAWC,cADpB;AAEFW,YAAAA,IAAI,EAAE,KAAKC,OAAL,CAAaC;AAFjB;AANF,SAAD,CAAL,CAUGC,IAVH,CAUQC,MAAM,IAAI;AACd,cAAIA,MAAM,CAACC,MAAP,IAAiB,GAArB,EAA0B;AACxB;AACAnB,YAAAA,OAAO,CAACC,GAAR,CAAYiB,MAAZ;AACD;AACJ,SAfD,EAeGE,KAfH,CAeStB,CAAC,IAAI;AACVE,UAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACH,SAjBD;AAkBA,aAAKiB,OAAL,CAAaC,KAAb,GAAqB,EAArB;AACA;AACH,KAlCkB;;AAEjB,SAAKd,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE,KAAKP,KAAL,CAAWO;AADhB,KAAb;AAGD;;AACDkB,EAAAA,iBAAiB,GAAG;AAClB,UAAMjB,IAAI,GAAG,KAAKC,OAAlB;AACD;;AA2BDiB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,GAAG,EAAEC,IAAI,IAAK,KAAKR,OAAL,GAAeQ,IAF/B;AAGE,MAAA,SAAS,EAAC,eAHZ;AAIE,MAAA,WAAW,EAAC,gBAJd;AAKE,MAAA,OAAO,EAAEzB,CAAC,IAAI,KAAKD,YAAL,CAAkBC,CAAlB,CALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADF;AAWD;;AAjD4C;AAA1BJ,O,CACZ8B,W,GAAc/B,W","sourcesContent":["import React, {useState, useRef, useContext, Component} from 'react';\nimport './Compose.css';\nimport Axios from 'axios';\nimport ChannelContext from '../../context/ChannelContext';\nimport AuthContext from '../../context/AuthContext';\n\n// export default function Compose(props) {\n//     const authentication = useContext(AuthContext);\n//     const channel = useContext(ChannelContext)\n//     const textInput = useRef(null)\n//     function handleSubmit(e) {\n//       e.preventDefault();\n//       if (e.keyCode == 13) {\n//         Axios({\n//           method: 'POST', \n//           url: \"https://localhost:4000/v1/messages\",\n//           headers: {\n//               Authorization: authentication.auth.token\n//           },\n//           data: {\n//               channelId: channel.channel.id,\n//               body: textInput.current.value\n//           }\n//         }).then(result => {\n//             if (result.status == 200) {\n//               // window.location.reload(false);\n//               console.log(result)\n//             }\n//         }).catch(e => {\n//             console.log(e);\n//         })\n//         textInput.current.value = \"\"   \n//        } \n//     }\n//     return (\n//       <div className=\"compose\">\n//           <input\n//             type=\"text\"\n//             ref={textInput}\n//             className=\"compose-input\"\n//             placeholder=\"Type a message\"\n//             // onInput={e => setInput(e.target.value)}\n//             onKeyUp={e => handleSubmit(e)}\n//           />\n//       </div>\n//     );\n// }\nexport default class Compose extends Component {\n  static contextType = AuthContext\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentChannel: this.props.currentChannel\n    }\n  }\n  componentDidMount() {\n    const auth = this.context;\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(this.state.currentChannel);\n    const {auth} = this.context;\n    if (e.keyCode == 13) {\n      Axios({\n        method: 'POST', \n        url: \"https://localhost:4000/v1/messages\",\n        headers: {\n            Authorization: auth.token\n        },\n        data: {\n            channelId: this.state.currentChannel,\n            body: this.message.value\n        }\n      }).then(result => {\n          if (result.status == 200) {\n            // window.location.reload(false);\n            console.log(result)\n          }\n      }).catch(e => {\n          console.log(e);\n      })\n      this.message.value = \"\"   \n     } \n  }\n  render() {\n    return (\n      <div className=\"compose\">\n          <input\n            type=\"text\"\n            ref={node => (this.message = node)}\n            className=\"compose-input\"\n            placeholder=\"Type a message\"\n            onKeyUp={e => this.handleSubmit(e)}\n          />\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}