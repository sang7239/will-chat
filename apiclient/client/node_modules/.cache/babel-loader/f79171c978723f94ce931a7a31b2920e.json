{"ast":null,"code":"var _jsxFileName = \"/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/components/Compose/index.js\";\nimport React, { useState, useRef, useContext, Component } from 'react';\nimport './Compose.css';\nimport Axios from 'axios';\nimport ChannelContext from '../../context/ChannelContext';\nimport AuthContext from '../../context/AuthContext';\nexport default function Compose(props) {\n  const authentication = useContext(AuthContext);\n  const channel = useContext(ChannelContext);\n  const textInput = useRef(null);\n\n  function handleSubmit(props, e) {\n    e.preventDefault();\n\n    if (e.keyCode == 13) {\n      Axios({\n        method: 'POST',\n        url: \"https://localhost:4000/v1/messages\",\n        headers: {\n          Authorization: authentication.auth.token\n        },\n        data: {\n          channelId: props.currentChannel,\n          body: textInput.current.value\n        }\n      }).then(result => {\n        if (result.status == 200) {\n          // window.location.reload(false);\n          console.log(result);\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n      textInput.current.value = \"\";\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"compose\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    ref: textInput,\n    className: \"compose-input\",\n    placeholder: \"Type a message\" // onInput={e => setInput(e.target.value)}\n    ,\n    onKeyUp: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }));\n} // export default class Compose extends Component {\n//   static contextType = AuthContext\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       currentChannel: this.props.currentChannel\n//     }\n//   }\n//   componentDidMount() {\n//     const auth = this.context;\n//   }\n//   // handleSubmit = (e) => {\n//   //   e.preventDefault();\n//   //   console.log(this.state.currentChannel);\n//   //   const {auth} = this.context;\n//   //   if (e.keyCode == 13) {\n//   //     Axios({\n//   //       method: 'POST', \n//   //       url: \"https://localhost:4000/v1/messages\",\n//   //       headers: {\n//   //           Authorization: auth.token\n//   //       },\n//   //       data: {\n//   //           channelId: this.state.currentChannel,\n//   //           body: this.message.value\n//   //       }\n//   //     }).then(result => {\n//   //         if (result.status == 200) {\n//   //           // window.location.reload(false);\n//   //           console.log(result)\n//   //         }\n//   //     }).catch(e => {\n//   //         console.log(e);\n//   //     })\n//   //     this.message.value = \"\"   \n//   //    } \n//   // }\n//   render() {\n//     return (\n//       <div className=\"compose\">\n//           <input\n//             type=\"text\"\n//             ref={node => (this.message = node)}\n//             className=\"compose-input\"\n//             placeholder=\"Type a message\"\n//             onKeyUp={e => this.handleSubmit(e)}\n//           />\n//       </div>\n//     );\n//   }\n// }","map":{"version":3,"sources":["/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/components/Compose/index.js"],"names":["React","useState","useRef","useContext","Component","Axios","ChannelContext","AuthContext","Compose","props","authentication","channel","textInput","handleSubmit","e","preventDefault","keyCode","method","url","headers","Authorization","auth","token","data","channelId","currentChannel","body","current","value","then","result","status","console","log","catch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,UAAjC,EAA6CC,SAA7C,QAA6D,OAA7D;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACnC,QAAMC,cAAc,GAAGP,UAAU,CAACI,WAAD,CAAjC;AACA,QAAMI,OAAO,GAAGR,UAAU,CAACG,cAAD,CAA1B;AACA,QAAMM,SAAS,GAAGV,MAAM,CAAC,IAAD,CAAxB;;AACA,WAASW,YAAT,CAAsBJ,KAAtB,EAA6BK,CAA7B,EAAgC;AAC9BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAID,CAAC,CAACE,OAAF,IAAa,EAAjB,EAAqB;AACnBX,MAAAA,KAAK,CAAC;AACJY,QAAAA,MAAM,EAAE,MADJ;AAEJC,QAAAA,GAAG,EAAE,oCAFD;AAGJC,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAEV,cAAc,CAACW,IAAf,CAAoBC;AAD9B,SAHL;AAMJC,QAAAA,IAAI,EAAE;AACFC,UAAAA,SAAS,EAAEf,KAAK,CAACgB,cADf;AAEFC,UAAAA,IAAI,EAAEd,SAAS,CAACe,OAAV,CAAkBC;AAFtB;AANF,OAAD,CAAL,CAUGC,IAVH,CAUQC,MAAM,IAAI;AACd,YAAIA,MAAM,CAACC,MAAP,IAAiB,GAArB,EAA0B;AACxB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD;AACJ,OAfD,EAeGI,KAfH,CAeSpB,CAAC,IAAI;AACVkB,QAAAA,OAAO,CAACC,GAAR,CAAYnB,CAAZ;AACH,OAjBD;AAkBAF,MAAAA,SAAS,CAACe,OAAV,CAAkBC,KAAlB,GAA0B,EAA1B;AACA;AACH;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,GAAG,EAAEhB,SAFP;AAGE,IAAA,SAAS,EAAC,eAHZ;AAIE,IAAA,WAAW,EAAC,gBAJd,CAKE;AALF;AAME,IAAA,OAAO,EAAEE,CAAC,IAAID,YAAY,CAACC,CAAD,CAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF;AAYH,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useState, useRef, useContext, Component} from 'react';\nimport './Compose.css';\nimport Axios from 'axios';\nimport ChannelContext from '../../context/ChannelContext';\nimport AuthContext from '../../context/AuthContext';\n\nexport default function Compose(props) {\n    const authentication = useContext(AuthContext);\n    const channel = useContext(ChannelContext)\n    const textInput = useRef(null)\n    function handleSubmit(props, e) {\n      e.preventDefault();\n      if (e.keyCode == 13) {\n        Axios({\n          method: 'POST', \n          url: \"https://localhost:4000/v1/messages\",\n          headers: {\n              Authorization: authentication.auth.token\n          },\n          data: {\n              channelId: props.currentChannel,\n              body: textInput.current.value\n          }\n        }).then(result => {\n            if (result.status == 200) {\n              // window.location.reload(false);\n              console.log(result)\n            }\n        }).catch(e => {\n            console.log(e);\n        })\n        textInput.current.value = \"\"   \n       } \n    }\n    return (\n      <div className=\"compose\">\n          <input\n            type=\"text\"\n            ref={textInput}\n            className=\"compose-input\"\n            placeholder=\"Type a message\"\n            // onInput={e => setInput(e.target.value)}\n            onKeyUp={e => handleSubmit(e)}\n          />\n      </div>\n    );\n}\n// export default class Compose extends Component {\n//   static contextType = AuthContext\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       currentChannel: this.props.currentChannel\n//     }\n//   }\n//   componentDidMount() {\n//     const auth = this.context;\n//   }\n//   // handleSubmit = (e) => {\n//   //   e.preventDefault();\n//   //   console.log(this.state.currentChannel);\n//   //   const {auth} = this.context;\n//   //   if (e.keyCode == 13) {\n//   //     Axios({\n//   //       method: 'POST', \n//   //       url: \"https://localhost:4000/v1/messages\",\n//   //       headers: {\n//   //           Authorization: auth.token\n//   //       },\n//   //       data: {\n//   //           channelId: this.state.currentChannel,\n//   //           body: this.message.value\n//   //       }\n//   //     }).then(result => {\n//   //         if (result.status == 200) {\n//   //           // window.location.reload(false);\n//   //           console.log(result)\n//   //         }\n//   //     }).catch(e => {\n//   //         console.log(e);\n//   //     })\n//   //     this.message.value = \"\"   \n//   //    } \n//   // }\n//   render() {\n//     return (\n//       <div className=\"compose\">\n//           <input\n//             type=\"text\"\n//             ref={node => (this.message = node)}\n//             className=\"compose-input\"\n//             placeholder=\"Type a message\"\n//             onKeyUp={e => this.handleSubmit(e)}\n//           />\n//       </div>\n//     );\n//   }\n// }"]},"metadata":{},"sourceType":"module"}