{"ast":null,"code":"var _jsxFileName = \"/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/context/ChannelContext.js\";\nimport React, { Component } from 'react';\nconst ChannelContext = React.createContext();\n\nclass ChannelProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      channel: {}\n    };\n\n    this.setChannel = channel => {\n      this.setState(prevState => ({\n        channel\n      }));\n    };\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    const {\n      user\n    } = this.state;\n    const {\n      setChannel\n    } = this;\n    return /*#__PURE__*/React.createElement(ChannelContext.Provider, {\n      value: {\n        user,\n        setChannel\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n}\n\nexport default ChannelContext;\nexport { ChannelProvider };","map":{"version":3,"sources":["/Users/willhwang/go/src/github.com/will-slack/apiclient/client/src/context/ChannelContext.js"],"names":["React","Component","ChannelContext","createContext","ChannelProvider","state","channel","setChannel","setState","prevState","render","children","props","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,MAAMC,cAAc,GAAGF,KAAK,CAACG,aAAN,EAAvB;;AAEA,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEtCI,KAFsC,GAE9B;AACNC,MAAAA,OAAO,EAAE;AADH,KAF8B;;AAAA,SAOtCC,UAPsC,GAOxBD,OAAD,IAAa;AACxB,WAAKE,QAAL,CAAeC,SAAD,KAAgB;AAAEH,QAAAA;AAAF,OAAhB,CAAd;AACD,KATqC;AAAA;;AAWtCI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKR,KAAtB;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAiB,IAAvB;AAEA,wBACE,oBAAC,cAAD,CAAgB,QAAhB;AACE,MAAA,KAAK,EAAE;AACLM,QAAAA,IADK;AAELN,QAAAA;AAFK,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGI,QANH,CADF;AAUD;;AA1BqC;;AA6BxC,eAAeT,cAAf;AAEA,SAASE,eAAT","sourcesContent":["import React, { Component } from 'react'\n\nconst ChannelContext = React.createContext()\n\nclass ChannelProvider extends Component {\n  // Context state\n  state = {\n    channel: {},\n  }\n\n  // Method to update state\n  setChannel = (channel) => {\n    this.setState((prevState) => ({ channel }))\n  }\n\n  render() {\n    const { children } = this.props\n    const { user } = this.state\n    const { setChannel } = this\n\n    return (\n      <ChannelContext.Provider\n        value={{\n          user,\n          setChannel,\n        }}\n      >\n        {children}\n      </ChannelContext.Provider>\n    )\n  }\n}\n\nexport default ChannelContext\n\nexport { ChannelProvider }"]},"metadata":{},"sourceType":"module"}